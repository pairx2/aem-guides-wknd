scripts=[
"# these users and ACLs are only necessary on author

create service user abbott-workflow-service-user
set principal ACL for abbott-workflow-service-user
	allow jcr:read, rep:write, jcr:versionManagement, jcr:modifyAccessControl ,jcr:readAccessControl, jcr:lockManagement on /var
end
			
# the path may not yet exist in AEMaaCS as it is created lazily
create path /var/workflow/instances(sling:Folder)
set ACL for abbott-workflow-service-user
    allow jcr:read, rep:write on /var/workflow/instances
end

# the path may not yet exist in AEMaaCS as it is created lazily
create path /var/workflow/models(sling:Folder)
set ACL for abbott-workflow-service-user
    allow jcr:read, rep:write on /var/workflow/models
end

# the path may not yet exist in AEMaaCS as it is created lazily
create path /var/workflow/models/abbott(sling:Folder)
set ACL for abbott-workflow-service-user
    allow jcr:read, rep:write on /var/workflow/models/abbott
end

# the path may not yet exist in AEMaaCS as it is created lazily
create path /conf/global/settings/workflow/launcher(sling:Folder)
set ACL for abbott-workflow-service-user
    allow jcr:read, rep:write on /conf/global/settings/workflow/launcher
end

# the path may not yet exist in AEMaaCS as it is created lazily
create path /conf/global/settings/workflow/launcher/config(sling:Folder)
set ACL for abbott-workflow-service-user
    allow jcr:read, rep:write on /conf/global/settings/workflow/launcher/config
end

# the path may not yet exist in AEMaaCS as it is created lazily
create path /var/workflow/packages(sling:Folder)
set ACL for abbott-workflow-service-user
    allow jcr:read, rep:write on /var/workflow/packages
end

# the path may not yet exist in AEMaaCS as it is created lazily
create path /var/log/aem(sling:Folder)
set ACL for abbott-workflow-service-user
    allow jcr:read, rep:write on /var/log/aem
end
"
]