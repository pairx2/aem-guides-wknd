let alturagirluptothirteen3 = [45.6, 46.8, 47.9, 48.8, 49.7, 50.5, 51.3, 52.1, 52.8, 53.4, 54.1, 54.7, 55.3, 55.8];
let alturagirluptothirteen15 = [47.2, 48.4, 49.5, 50.5, 51.4, 52.2, 53, 53.8, 54.5, 55.2, 55.8, 56.4, 57, 57.6];
let alturagirluptothirteen50 = [49.1, 50.3, 51.5, 52.5, 53.4, 54.2, 55.1, 55.8, 56.6, 57.3, 57.9, 58.6, 59.2, 59.8];
let alturagirluptothirteen85 = [51.1, 52.3, 53.5, 54.5, 55.4, 56.3, 57.1, 57.9, 58.7, 59.4, 60.1, 60.7, 61.4, 62];
let alturagirluptothirteen97 = [52.7, 53.9, 55.1, 56.1, 57, 57.9, 58.8, 59.6, 60.4, 61.1, 61.8, 62.5, 63.1, 63.7];

// 0-13
let alturachilduptothirteen3 = [46.3, 47.5, 48.8, 49.8, 50.7, 51.7, 52.5, 53.4, 54.1, 54.9, 55.6, 56.3, 56.9, 57.6];
let alturachilduptothirteen15 = [47.9, 49.1, 50.4, 51.4, 52.4, 53.3, 54.2, 55, 55.8, 56.6, 57.3, 58, 58.7, 59.3];
let alturachilduptothirteen50 = [49.9, 51.1, 52.3, 53.4, 54.4, 55.3, 56.2, 57.1, 57.9, 58.7, 59.4, 60.1, 60.8, 61.4];
let alturachilduptothirteen85 = [51.8, 53.1, 54.3, 55.4, 56.4, 57.4, 58.3, 59.1, 60, 60.7, 61.5, 62.2, 62.9, 63.5];
let alturachilduptothirteen97 = [53.4, 54.7, 55.9, 57, 58, 59, 59.9, 60.8, 61.6, 62.4, 63.2, 63.9, 64.6, 65.2];

// 0-60
let alturagirluptofive3 = [45.6, 50, 53.2, 55.8, 58, 59.9, 61.5, 62.9, 64.3, 65.6, 66.8, 68, 69.2, 70.3, 71.3, 72.4, 73.3, 74.3, 75.2, 76.2, 77, 77.9, 78.7, 79.6, 79.6, 80.4, 81.2, 81.9, 82.6, 83.4, 84, 84.7, 85.4, 86, 86.7, 87.3, 87.9, 88.5, 89.1, 89.7, 90.3, 90.8, 91.4, 92, 92.5, 93, 93.6, 94.1, 94.6, 95.1, 95.7, 96.2, 96.7, 97.2, 97.6, 98.1, 98.6, 99.1, 99.6, 100, 100.5];
let alturagirluptofive15 = [47.2, 51.7, 55, 57.6, 59.8, 61.7, 63.4, 64.9, 66.3, 67.6, 68.9, 70.2, 71.3, 72.5, 73.6, 74.7, 75.7, 76.7, 77.7, 78.7, 79.6, 80.5, 81.4, 82.2, 82.4, 83.2, 84, 84.8, 85.5, 86.3, 87, 87.7, 88.4, 89.1, 89.8, 90.5, 91.1, 91.7, 92.4, 93, 93.6, 94.2, 94.8, 95.4, 96, 96.6, 97.2, 97.7, 98.3, 98.8, 99.4, 99.9, 100.4, 101, 101.5, 102, 102.5, 103, 103.5, 104, 104.5];
let alturagirluptofive50 = [49.1, 53.7, 57.1, 59.8, 62.1, 64, 65.7, 67.3, 68.7, 70.1, 71.5, 72.8, 74, 75.2, 76.4, 77.5, 78.6, 79.7, 80.7, 81.7, 82.7, 83.7, 84.6, 85.5, 85.7, 86.6, 87.4, 88.3, 89.1, 89.9, 90.7, 91.4, 92.2, 92.9, 93.6, 94.4, 95.1, 95.7, 96.4, 97.1, 97.7, 98.4, 99, 99.7, 100.3, 100.9, 101.5, 102.1, 102.7, 103.3, 103.9, 104.5, 105, 105.6, 106.2, 106.7, 107.3, 107.8, 108.4, 108.9, 109.4];
let alturagirluptofive85 = [51.1, 55.7, 59.2, 62, 64.3, 66.3, 68.1, 69.7, 71.2, 72.6, 74, 75.4, 76.7, 77.9, 79.2, 80.3, 81.5, 82.6, 83.7, 84.8, 85.8, 86.8, 87.8, 88.8, 89.1, 90, 90.9, 91.8, 92.7, 93.5, 94.3, 95.2, 95.9, 96.7, 97.5, 98.3, 99, 99.7, 100.5, 101.2, 101.9, 102.6, 103.3, 103.9, 104.6, 105.3, 105.9, 106.6, 107.2, 107.8, 108.4, 109.1, 109.7, 110.3, 110.9, 111.5, 112.1, 112.6, 113.2, 113.8, 114.4];
let alturagirluptofive97 = [52.7, 57.4, 60.9, 63.8, 66.2, 68.2, 70, 71.6, 73.2, 74.7, 76.1, 77.5, 78.9, 80.2, 81.4, 82.7, 83.9, 85, 86.2, 87.3, 88.4, 89.4, 90.5, 91.5, 91.8, 92.8, 93.7, 94.6, 95.6, 96.4, 97.3, 98.2, 99, 99.8, 100.6, 101.4, 102.2, 103, 103.7, 104.5, 105.2, 106, 106.7, 107.4, 108.1, 108.8, 109.5, 110.2, 110.8, 111.5, 112.1, 112.8, 113.4, 114.1, 114.7, 115.3, 116, 116.6, 117.2, 117.8, 118.4];

// 24-120
let alturagirluptoten3 = [79.6, 80.4, 81.2, 81.9, 82.6, 83.4, 84, 84.7, 85.4, 86, 86.7, 87.3, 87.9, 88.5, 89.1, 89.7, 90.3, 90.8, 91.4, 92, 92.5, 93, 93.6, 94.1, 94.6, 95.1, 95.7, 96.2, 96.7, 97.2, 97.6, 98.1, 98.6, 99.1, 99.6, 100, 100.5, 100.624, 101.087, 101.545, 101.998, 102.449, 102.894, 103.337, 103.776, 104.212, 104.643, 105.071, 105.496, 105.92, 106.342, 106.76, 107.181, 107.599, 108.016, 108.435, 108.851, 109.27, 109.688, 110.107, 110.529, 110.949, 111.371, 111.792, 112.216, 112.643, 113.068, 113.494, 113.923, 114.354, 114.785, 115.218, 115.652, 116.087, 116.526, 116.966, 117.407, 117.85, 118.294, 118.742, 119.191, 119.639, 120.094, 120.547, 121.002, 121.46, 121.919, 122.38, 122.842, 123.307, 123.771, 124.239, 124.711, 125.181, 125.653, 126.128, 126.605];
let alturagirluptoten15 = [82.4, 83.2, 84, 84.8, 85.5, 86.3, 87, 87.7, 88.4, 89.1, 89.8, 90.5, 91.1, 91.7, 92.4, 93, 93.6, 94.2, 94.8, 95.4, 96, 96.6, 97.2, 97.7, 98.3, 98.8, 99.4, 99.9, 100.4, 101, 101.5, 102, 102.5, 103, 103.5, 104, 104.5, 104.655, 105.145, 105.63, 106.111, 106.589, 107.061, 107.53, 107.995, 108.457, 108.914, 109.368, 109.818, 110.267, 110.714, 111.158, 111.603, 112.046, 112.488, 112.931, 113.372, 113.814, 114.257, 114.7, 115.145, 115.589, 116.035, 116.48, 116.927, 117.376, 117.825, 118.275, 118.727, 119.18, 119.635, 120.09, 120.547, 121.005, 121.466, 121.928, 122.392, 122.857, 123.324, 123.793, 124.264, 124.735, 125.21, 125.685, 126.161, 126.64, 127.12, 127.602, 128.085, 128.57, 129.055, 129.543, 130.033, 130.524, 131.016, 131.51, 132.007];
let alturagirluptoten50 = [85.7, 86.6, 87.4, 88.3, 89.1, 89.9, 90.7, 91.4, 92.2, 92.9, 93.6, 94.4, 95.1, 95.7, 96.4, 97.1, 97.7, 98.4, 99, 99.7, 100.3, 100.9, 101.5, 102.1, 102.7, 103.3, 103.9, 104.5, 105, 105.6, 106.2, 106.7, 107.3, 107.8, 108.4, 108.9, 109.4, 109.602, 110.126, 110.645, 111.16, 111.67, 112.175, 112.677, 113.174, 113.667, 114.156, 114.642, 115.124, 115.604, 116.081, 116.557, 117.031, 117.504, 117.977, 118.449, 118.921, 119.393, 119.865, 120.337, 120.81, 121.284, 121.759, 122.234, 122.71, 123.187, 123.665, 124.144, 124.623, 125.104, 125.587, 126.071, 126.556, 127.042, 127.53, 128.02, 128.511, 129.004, 129.498, 129.993, 130.49, 130.989, 131.49, 131.991, 132.494, 132.999, 133.505, 134.012, 134.52, 135.03, 135.541, 136.053, 136.567, 137.082, 137.599, 138.117, 138.636];
let alturagirluptoten85 = [89.1, 90, 90.9, 91.8, 92.7, 93.5, 94.3, 95.2, 95.9, 96.7, 97.5, 98.3, 99, 99.7, 100.5, 101.2, 101.9, 102.6, 103.3, 103.9, 104.6, 105.3, 105.9, 106.6, 107.2, 107.8, 108.4, 109.1, 109.7, 110.3, 110.9, 111.5, 112.1, 112.6, 113.2, 113.8, 114.4, 114.549, 115.107, 115.66, 116.208, 116.751, 117.29, 117.823, 118.353, 118.878, 119.399, 119.916, 120.431, 120.94, 121.448, 121.956, 122.459, 122.963, 123.466, 123.967, 124.47, 124.971, 125.473, 125.975, 126.476, 126.98, 127.483, 127.988, 128.493, 128.997, 129.504, 130.012, 130.52, 131.029, 131.539, 132.051, 132.565, 133.08, 133.595, 134.111, 134.63, 135.15, 135.671, 136.193, 136.717, 137.244, 137.769, 138.298, 138.828, 139.358, 139.889, 140.422, 140.956, 141.49, 142.027, 142.564, 143.101, 143.64, 144.182, 144.723, 145.266];
let alturagirluptoten97 = [91.8, 92.8, 93.7, 94.6, 95.6, 96.4, 97.3, 98.2, 99, 99.8, 100.6, 101.4, 102.2, 103, 103.7, 104.5, 105.2, 106, 106.7, 107.4, 108.1, 108.8, 109.5, 110.2, 110.8, 111.5, 112.1, 112.8, 113.4, 114.1, 114.7, 115.3, 116, 116.6, 117.2, 117.8, 118.4, 118.579, 119.165, 119.745, 120.321, 120.89, 121.456, 122.016, 122.572, 123.123, 123.67, 124.213, 124.753, 125.288, 125.821, 126.354, 126.881, 127.41, 127.938, 128.463, 128.99, 129.515, 130.041, 130.568, 131.092, 131.62, 132.146, 132.676, 133.204, 133.731, 134.261, 134.793, 135.323, 135.855, 136.388, 136.923, 137.46, 137.998, 138.535, 139.074, 139.615, 140.157, 140.701, 141.245, 141.79, 142.339, 142.885, 143.435, 143.987, 144.538, 145.09, 145.644, 146.199, 146.753, 147.311, 147.868, 148.423, 148.983, 149.545, 150.105, 150.667];

// 0-60
let alturachilduptofive3 = [46.3, 51.1, 54.7, 57.6, 60, 61.9, 63.6, 65.1, 66.5, 67.7, 69, 70.2, 71.3, 72.4, 73.4, 74.4, 75.4, 76.3, 77.2, 78.1, 78.9, 79.7, 80.5, 81.3, 81.4, 82.1, 82.8, 83.5, 84.2, 84.9, 85.5, 86.2, 86.8, 87.4, 88, 88.5, 89.1, 89.7, 90.2, 90.8, 91.3, 91.9, 92.4, 92.9, 93.4, 93.9, 94.4, 94.9, 95.4, 95.9, 96.4, 96.9, 97.4, 97.9, 98.4, 98.8, 99.3, 99.8, 100.3, 100.8, 101.2];
let alturachilduptofive15 = [47.9, 52.7, 56.4, 59.3, 61.7, 63.7, 65.4, 66.9, 68.3, 69.6, 70.9, 72.1, 73.3, 74.4, 75.5, 76.5, 77.5, 78.5, 79.5, 80.4, 81.3, 82.2, 83, 83.8, 83.9, 84.7, 85.5, 86.3, 87, 87.7, 88.4, 89.1, 89.7, 90.4, 91, 91.6, 92.2, 92.8, 93.4, 94, 94.6, 95.2, 95.7, 96.3, 96.8, 97.4, 97.9, 98.5, 99, 99.5, 100, 100.5, 101.1, 101.6, 102.1, 102.6, 103.1, 103.6, 104.1, 104.7, 105.2];
let alturachilduptofive50 = [49.9, 54.7, 58.4, 61.4, 63.9, 65.9, 67.6, 69.2, 70.6, 72, 73.3, 74.5, 75.7, 76.9, 78, 79.1, 80.2, 81.2, 82.3, 83.2, 84.2, 85.1, 86, 86.9, 87.1, 88, 88.8, 89.6, 90.4, 91.2, 91.9, 92.7, 93.4, 94.1, 94.8, 95.4, 96.1, 96.7, 97.4, 98, 98.6, 99.2, 99.9, 100.4, 101, 101.6, 102.2, 102.8, 103.3, 103.9, 104.4, 105, 105.6, 106.1, 106.7, 107.2, 107.8, 108.3, 108.9, 109.4, 110];
let alturachilduptofive85 = [51.8, 56.7, 60.5, 63.5, 66, 68.1, 69.8, 71.4, 72.9, 74.3, 75.6, 77, 78.2, 79.4, 80.6, 81.8, 82.9, 84, 85.1, 86.1, 87.1, 88.1, 89.1, 90, 90.3, 91.2, 92.1, 93, 93.8, 94.7, 95.5, 96.2, 97, 97.8, 98.5, 99.2, 99.9, 100.6, 101.3, 102, 102.7, 103.3, 104, 104.6, 105.2, 105.8, 106.5, 107.1, 107.7, 108.3, 108.9, 109.5, 110.1, 110.7, 111.2, 111.8, 112.4, 113, 113.6, 114.2, 114.8];
let alturachilduptofive97 = [53.4, 58.4, 62.2, 65.3, 67.8, 69.9, 71.6, 73.2, 74.7, 76.2, 77.6, 78.9, 80.2, 81.5, 82.7, 83.9, 85.1, 86.2, 87.3, 88.4, 89.5, 90.5, 91.6, 92.6, 92.9, 93.8, 94.8, 95.7, 96.6, 97.5, 98.3, 99.2, 100, 100.8, 101.5, 102.3, 103.1, 103.8, 104.5, 105.2, 105.9, 106.6, 107.3, 108, 108.6, 109.3, 109.9, 110.6, 111.2, 111.8, 112.5, 113.1, 113.7, 114.3, 115, 115.6, 116.2, 116.8, 117.4, 118.1, 118.7];                    

// 24-120
let alturachilduptoten3 = [81.4, 82.1, 82.8, 83.5, 84.2, 84.9, 85.5, 86.2, 86.8, 87.4, 88, 88.5, 89.1, 89.7, 90.2, 90.8, 91.3, 91.9, 92.4, 92.9, 93.4, 93.9, 94.4, 94.9, 95.4, 95.9, 96.4, 96.9, 97.4, 97.9, 98.4, 98.8, 99.3, 99.8, 100.3, 100.8, 101.2, 101.629, 102.106, 102.581, 103.054, 103.522, 103.985, 104.444, 104.902, 105.353, 105.801, 106.246, 106.685, 107.12, 107.555, 107.985, 108.414, 108.842, 109.268, 109.692, 110.114, 110.538, 110.958, 111.376, 111.793, 112.207, 112.62, 113.031, 113.44, 113.848, 114.254, 114.657, 115.058, 115.458, 115.854, 116.249, 116.642, 117.034, 117.423, 117.811, 118.197, 118.583, 118.965, 119.349, 119.732, 120.114, 120.496, 120.877, 121.258, 121.639, 122.019, 122.398, 122.779, 123.156, 123.533, 123.912, 124.287, 124.665, 125.039, 125.416, 125.792];
let alturachilduptoten15 = [83.9, 84.7, 85.5, 86.3, 87, 87.7, 88.4, 89.1, 89.7, 90.4, 91, 91.6, 92.2, 92.8, 93.4, 94, 94.6, 95.2, 95.7, 96.3, 96.8, 97.4, 97.9, 98.5, 99, 99.5, 100, 100.5, 101.1, 101.6, 102.1, 102.6, 103.1, 103.6, 104.1, 104.7, 105.2, 105.506, 106.01, 106.51, 107.009, 107.503, 107.992, 108.478, 108.96, 109.437, 109.91, 110.38, 110.845, 111.306, 111.765, 112.221, 112.674, 113.128, 113.579, 114.028, 114.476, 114.924, 115.37, 115.814, 116.256, 116.696, 117.134, 117.571, 118.006, 118.439, 118.87, 119.299, 119.726, 120.15, 120.573, 120.993, 121.411, 121.828, 122.243, 122.656, 123.068, 123.479, 123.888, 124.297, 124.705, 125.113, 125.521, 125.928, 126.334, 126.741, 127.146, 127.551, 127.957, 128.36, 128.763, 129.167, 129.568, 129.97, 130.371, 130.772, 131.174];
let alturachilduptoten50 = [87.1, 88, 88.8, 89.6, 90.4, 91.2, 91.9, 92.7, 93.4, 94.1, 94.8, 95.4, 96.1, 96.7, 97.4, 98, 98.6, 99.2, 99.9, 100.4, 101, 101.6, 102.2, 102.8, 103.3, 103.9, 104.4, 105, 105.6, 106.1, 106.7, 107.2, 107.8, 108.3, 108.9, 109.4, 110, 110.265, 110.801, 111.334, 111.864, 112.39, 112.911, 113.428, 113.941, 114.45, 114.955, 115.455, 115.951, 116.443, 116.932, 117.42, 117.905, 118.388, 118.87, 119.351, 119.83, 120.308, 120.785, 121.26, 121.734, 122.205, 122.675, 123.143, 123.609, 124.074, 124.536, 124.996, 125.454, 125.91, 126.364, 126.816, 127.265, 127.713, 128.159, 128.603, 129.047, 129.489, 129.93, 130.37, 130.81, 131.25, 131.688, 132.127, 132.565, 133.003, 133.44, 133.877, 134.313, 134.748, 135.183, 135.617, 136.05, 136.483, 136.915, 137.347, 137.78];
let alturachilduptoten85 = [90.3, 91.2, 92.1, 93, 93.8, 94.7, 95.5, 96.2, 97, 97.8, 98.5, 99.2, 99.9, 100.6, 101.3, 102, 102.7, 103.3, 104, 104.6, 105.2, 105.8, 106.5, 107.1, 107.7, 108.3, 108.9, 109.5, 110.1, 110.7, 111.2, 111.8, 112.4, 113, 113.6, 114.2, 114.8, 115.023, 115.592, 116.157, 116.718, 117.276, 117.83, 118.378, 118.922, 119.463, 119.999, 120.53, 121.057, 121.581, 122.1, 122.619, 123.135, 123.648, 124.161, 124.674, 125.184, 125.693, 126.201, 126.707, 127.212, 127.715, 128.216, 128.715, 129.213, 129.709, 130.202, 130.694, 131.183, 131.671, 132.155, 132.638, 133.119, 133.598, 134.075, 134.551, 135.025, 135.498, 135.972, 136.444, 136.915, 137.386, 137.856, 138.326, 138.796, 139.266, 139.735, 140.203, 140.669, 141.136, 141.603, 142.067, 142.532, 142.996, 143.46, 143.923, 144.385];
let alturachilduptoten97 = [92.9, 93.8, 94.8, 95.7, 96.6, 97.5, 98.3, 99.2, 100, 100.8, 101.5, 102.3, 103.1, 103.8, 104.5, 105.2, 105.9, 106.6, 107.3, 108, 108.6, 109.3, 109.9, 110.6, 111.2, 111.8, 112.5, 113.1, 113.7, 114.3, 115, 115.6, 116.2, 116.8, 117.4, 118.1, 118.7, 118.9, 119.495, 120.087, 120.673, 121.257, 121.837, 122.412, 122.98, 123.547, 124.109, 124.664, 125.217, 125.766, 126.31, 126.854, 127.396, 127.934, 128.472, 129.01, 129.546, 130.079, 130.613, 131.145, 131.675, 132.203, 132.73, 133.255, 133.778, 134.299, 134.819, 135.336, 135.851, 136.363, 136.874, 137.382, 137.888, 138.392, 138.895, 139.396, 139.896, 140.394, 140.895, 141.392, 141.889, 142.385, 142.881, 143.377, 143.872, 144.367, 144.862, 145.356, 145.847, 146.34, 146.833, 147.322, 147.813, 148.301, 148.792, 149.279, 149.767];


let pesogirluptothirteen3 = [2.440206591, 2.510273854, 2.701773015, 2.92241842, 3.141727053, 3.349532308, 3.543482905, 3.724331457, 3.892948094, 4.050957936, 4.199963384, 4.340565584, 4.473563168, 4.599909231];
let pesogirluptothirteen15 = [2.778807183, 2.860937144, 3.068385028, 3.307877846, 3.545670064, 3.770674485, 3.980413223, 4.175820792, 4.357900148, 4.528522802, 4.689411802, 4.841255211, 4.984940242, 5.121476636];
let pesogirluptothirteen50 = [3.2322, 3.3388, 3.5693, 3.8352, 4.0987, 4.3476, 4.5793, 4.795, 4.9959, 5.1842, 5.3618, 5.5295, 5.6883, 5.8393];
let pesogirluptothirteen85 = [3.728756279, 3.872703139, 4.130902816, 4.427506123, 4.720661509, 4.99710105, 5.254152188, 5.493334764, 5.71609152, 5.924980148, 6.122118141, 6.308422257, 6.485008449, 6.653097399];
let pesogirluptothirteen97 = [4.166233844, 4.35186319, 4.636730753, 4.962090939, 5.282838885, 5.584890296, 5.865560141, 6.126674887, 6.369915457, 6.598152291, 6.813717517, 7.017625469, 7.211087486, 7.395451796];

let pesochilduptothirteen3 = [2.507275485, 2.627558591, 2.849024402, 3.104884224, 3.361636389, 3.607723879, 3.838239005, 4.05340604, 4.254223744, 4.442122285, 4.618449196, 4.783868771, 4.939285917, 5.085738363];
let pesochilduptothirteen15 = [2.864533658, 2.992101721, 3.232035275, 3.509930917, 3.788159295, 4.053959517, 4.302067235, 4.532894775, 4.747732944, 4.948248729, 5.136021285, 5.311938812, 5.477030083, 5.632443478];
let pesochilduptothirteen50 = [3.3464, 3.4879, 3.7529, 4.0603, 4.3671, 4.659, 4.9303, 5.1817, 5.4149, 5.6319, 5.8346, 6.0242, 6.2019, 6.369];
let pesochilduptothirteen85 = [3.878184074, 4.040479178, 4.333592343, 4.67352524, 5.011595252, 5.331908131, 5.628338389, 5.901946979, 6.154904587, 6.38959719, 6.608290383, 6.812540348, 7.003742428, 7.183368227];
let pesochilduptothirteen97 = [4.349896496, 4.535284121, 4.853879764, 5.222815575, 5.588568123, 5.93391384, 6.252394377, 6.545427419, 6.815616889, 7.065707443, 7.298299153, 7.515274017, 7.718206769, 7.908725713];

let pesogirluptofive3 = [2.440286028, 3.21572221, 4.004145287, 4.605478821, 5.087945772, 5.482677746, 5.811856191, 6.09412583, 6.342189163, 6.564434399, 6.767958638, 6.958852054, 7.141559476, 7.319064638, 7.493117295, 7.665123484, 7.835335472, 8.004425326, 8.172344443, 8.338798971, 8.504265462, 8.668913778, 8.833259014, 8.997270137, 9.161376887, 9.324972367, 9.487388407, 9.647732951, 9.80545107, 9.959692412, 10.11061534, 10.25809968, 10.40246353, 10.54447623, 10.68461608, 10.82315055, 10.96066915, 11.09668694, 11.23180787, 11.36518812, 11.49745987, 11.62839258, 11.75764709, 11.88570013, 12.01247141, 12.13832615, 12.26313393, 12.38753541, 12.51134689, 12.63472631, 12.75774043, 12.88085229, 13.00351318, 13.12579195, 13.24796516, 13.36950814, 13.49019817, 13.61035199, 13.72943679, 13.84785457, 13.9651422];
let pesogirluptofive15 = [2.778807183, 3.62572187, 4.477825542, 5.12735995, 5.649104823, 6.076560508, 6.433880789, 6.741544791, 7.013072385, 7.257111283, 7.481041774, 7.691225086, 7.892398928, 8.087652998, 8.278988906, 8.467827489, 8.65474372, 8.840457117, 9.024973437, 9.208188489, 9.390544099, 9.572371924, 9.754186768, 9.936047069, 10.11824274, 10.30020988, 10.48122564, 10.66038197, 10.83698178, 11.01026309, 11.18024945, 11.34690344, 11.51056942, 11.67211016, 11.83197787, 11.9905676, 12.14843137, 12.30522402, 12.46137196, 12.61622796, 12.77017314, 12.92300305, 13.07441769, 13.22475586, 13.37392838, 13.52224162, 13.66964945, 13.81655955, 13.96296671, 14.10904578, 14.25476484, 14.40053141, 14.54590874, 14.69092689, 14.83575181, 14.97989948, 15.12322684, 15.26586375, 15.40743089, 15.54815034, 15.68772391];
let pesogirluptofive50 = [3.2322, 4.1873, 5.1282, 5.8458, 6.4237, 6.8985, 7.297, 7.6422, 7.9487, 8.2254, 8.48, 8.7192, 8.9481, 9.1699, 9.387, 9.6008, 9.8124, 10.0226, 10.2315, 10.4393, 10.6464, 10.8534, 11.0608, 11.2688, 11.4775, 11.6864, 11.8947, 12.1015, 12.3059, 12.5073, 12.7055, 12.9006, 13.093, 13.2837, 13.4731, 13.6618, 13.8503, 14.0385, 14.2265, 14.414, 14.601, 14.7873, 14.9727, 15.1573, 15.341, 15.524, 15.7064, 15.8882, 16.0697, 16.2511, 16.4322, 16.6133, 16.7942, 16.9748, 17.1551, 17.3347, 17.5136, 17.6916, 17.8686, 18.0445, 18.2193];
let pesogirluptofive85 = [3.728756279, 4.819113672, 5.862788434, 6.660325562, 7.305109741, 7.837069971, 8.285924843, 8.677533116, 9.027667709, 9.34537418, 9.638618078, 9.914435926, 10.17827549, 10.43340719, 10.68275431, 10.9276294, 11.16984014, 11.41029959, 11.6492413, 11.88726952, 12.12474791, 12.3626473, 12.60142953, 12.84148082, 13.08269561, 13.32465046, 13.56645436, 13.80726206, 14.04593513, 14.28211604, 14.51529606, 14.74576549, 14.97401925, 15.20122646, 15.42770457, 15.65432991, 15.88154711, 16.10961346, 16.33813489, 16.56731988, 16.79669191, 17.02600253, 17.25523923, 17.48415884, 17.71265215, 17.94076108, 18.16879779, 18.39616839, 18.62360989, 18.85135439, 19.07896244, 19.30656441, 19.53436225, 19.76197928, 19.98921162, 20.21579824, 20.44195378, 20.66699122, 20.89123382, 21.11410009, 21.33603996];
let pesogirluptofive97 = [4.166233844, 5.390452934, 6.530128974, 7.403373221, 8.112340538, 8.699851889, 9.198221871, 9.63592136, 10.02975323, 10.38876954, 10.72108765, 11.03400589, 11.33322426, 11.62202084, 11.90386135, 12.17991241, 12.452731, 12.72335366, 12.99215985, 13.26017696, 13.52774813, 13.79624719, 14.06607982, 14.33782601, 14.61120774, 14.88587271, 15.16084287, 15.43536905, 15.70808924, 15.97892473, 16.24703116, 16.51290645, 16.77716648, 17.04114875, 17.30507299, 17.57011181, 17.8366669, 18.10540175, 18.3753459, 18.64728726, 18.92027863, 19.19396776, 19.4685925, 19.74352501, 20.01865183, 20.2938336, 20.56962432, 20.8447546, 21.12045359, 21.39698716, 21.67364778, 21.95036209, 22.22784317, 22.50531725, 22.78238366, 23.05895406, 23.33549426, 23.61075492, 23.88555778, 24.15875987, 24.43134005];

let pesogirluptoten3 = [2.440286028, 3.21572221, 4.004145287, 4.605478821, 5.087945772, 5.482677746, 5.811856191, 6.09412583, 6.342189163, 6.564434399, 6.767958638, 6.958852054, 7.141559476, 7.319064638, 7.493117295, 7.665123484, 7.835335472, 8.004425326, 8.172344443, 8.338798971, 8.504265462, 8.668913778, 8.833259014, 8.997270137, 9.161376887, 9.324972367, 9.487388407, 9.647732951, 9.80545107, 9.959692412, 10.11061534, 10.25809968, 10.40246353, 10.54447623, 10.68461608, 10.82315055, 10.96066915, 11.09668694, 11.23180787, 11.36518812, 11.49745987, 11.62839258, 11.75764709, 11.88570013, 12.01247141, 12.13832615, 12.26313393, 12.38753541, 12.51134689, 12.63472631, 12.75774043, 12.88085229, 13.00351318, 13.12579195, 13.24796516, 13.36950814, 13.49019817, 13.61035199, 13.72943679, 13.84785457, 13.9651422, 14.173, 14.297, 14.421, 14.544, 14.666, 14.788, 14.909, 15.03, 15.151, 15.272, 15.392, 15.513, 15.634, 15.756, 15.878, 16.001, 16.126, 16.252, 16.38, 16.509, 16.641, 16.774, 16.91, 17.049, 17.189, 17.332, 17.477, 17.625, 17.775, 17.927, 18.082, 18.24, 18.4, 18.562, 18.728, 18.896, 19.066, 19.24, 19.416, 19.595, 19.777, 19.961, 20.147, 20.337, 20.528, 20.722, 20.918, 21.116, 21.316, 21.518, 21.723, 21.929, 22.138, 22.349, 22.563, 22.78, 22.999, 23.222, 23.447, 23.676];
let pesogirluptoten15 = [2.778807183, 3.62572187, 4.477825542, 5.12735995, 5.649104823, 6.076560508, 6.433880789, 6.741544791, 7.013072385, 7.257111283, 7.481041774, 7.691225086, 7.892398928, 8.087652998, 8.278988906, 8.467827489, 8.65474372, 8.840457117, 9.024973437, 9.208188489, 9.390544099, 9.572371924, 9.754186768, 9.936047069, 10.11824274, 10.30020988, 10.48122564, 10.66038197, 10.83698178, 11.01026309, 11.18024945, 11.34690344, 11.51056942, 11.67211016, 11.83197787, 11.9905676, 12.14843137, 12.30522402, 12.46137196, 12.61622796, 12.77017314, 12.92300305, 13.07441769, 13.22475586, 13.37392838, 13.52224162, 13.66964945, 13.81655955, 13.96296671, 14.10904578, 14.25476484, 14.40053141, 14.54590874, 14.69092689, 14.83575181, 14.97989948, 15.12322684, 15.26586375, 15.40743089, 15.54815034, 15.68772391, 15.821, 15.965, 16.108, 16.25, 16.392, 16.534, 16.675, 16.815, 16.956, 17.096, 17.236, 17.377, 17.518, 17.66, 17.803, 17.947, 18.092, 18.239, 18.388, 18.539, 18.693, 18.848, 19.007, 19.168, 19.332, 19.499, 19.668, 19.84, 20.014, 20.192, 20.372, 20.556, 20.742, 20.931, 21.124, 21.319, 21.518, 21.72, 21.925, 22.133, 22.345, 22.559, 22.776, 22.996, 23.219, 23.444, 23.672, 23.902, 24.135, 24.37, 24.607, 24.847, 25.09, 25.336, 25.584, 25.836, 26.091, 26.349, 26.611, 26.877];
let pesogirluptoten50 = [3.2322, 4.1873, 5.1282, 5.8458, 6.4237, 6.8985, 7.297, 7.6422, 7.9487, 8.2254, 8.48, 8.7192, 8.9481, 9.1699, 9.387, 9.6008, 9.8124, 10.0226, 10.2315, 10.4393, 10.6464, 10.8534, 11.0608, 11.2688, 11.4775, 11.6864, 11.8947, 12.1015, 12.3059, 12.5073, 12.7055, 12.9006, 13.093, 13.2837, 13.4731, 13.6618, 13.8503, 14.0385, 14.2265, 14.414, 14.601, 14.7873, 14.9727, 15.1573, 15.341, 15.524, 15.7064, 15.8882, 16.0697, 16.2511, 16.4322, 16.6133, 16.7942, 16.9748, 17.1551, 17.3347, 17.5136, 17.6916, 17.8686, 18.0445, 18.2193, 18.258, 18.433, 18.607, 18.781, 18.954, 19.128, 19.3, 19.473, 19.646, 19.818, 19.991, 20.164, 20.338, 20.512, 20.688, 20.866, 21.046, 21.227, 21.411, 21.598, 21.787, 21.98, 22.175, 22.374, 22.576, 22.782, 22.99, 23.202, 23.418, 23.637, 23.859, 24.085, 24.315, 24.548, 24.785, 25.026, 25.271, 25.52, 25.772, 26.028, 26.288, 26.552, 26.819, 27.09, 27.364, 27.641, 27.921, 28.204, 28.49, 28.779, 29.071, 29.366, 29.665, 29.966, 30.272, 30.58, 30.893, 31.21, 31.532, 31.858];
let pesogirluptoten85 = [3.728756279, 4.819113672, 5.862788434, 6.660325562, 7.305109741, 7.837069971, 8.285924843, 8.677533116, 9.027667709, 9.34537418, 9.638618078, 9.914435926, 10.17827549, 10.43340719, 10.68275431, 10.9276294, 11.16984014, 11.41029959, 11.6492413, 11.88726952, 12.12474791, 12.3626473, 12.60142953, 12.84148082, 13.08269561, 13.32465046, 13.56645436, 13.80726206, 14.04593513, 14.28211604, 14.51529606, 14.74576549, 14.97401925, 15.20122646, 15.42770457, 15.65432991, 15.88154711, 16.10961346, 16.33813489, 16.56731988, 16.79669191, 17.02600253, 17.25523923, 17.48415884, 17.71265215, 17.94076108, 18.16879779, 18.39616839, 18.62360989, 18.85135439, 19.07896244, 19.30656441, 19.53436225, 19.76197928, 19.98921162, 20.21579824, 20.44195378, 20.66699122, 20.89123382, 21.11410009, 21.33603996, 21.288, 21.506, 21.723, 21.941, 22.158, 22.375, 22.591, 22.808, 23.026, 23.243, 23.461, 23.68, 23.9, 24.121, 24.344, 24.569, 24.797, 25.028, 25.261, 25.498, 25.738, 25.982, 26.231, 26.483, 26.74, 27, 27.265, 27.535, 27.808, 28.086, 28.368, 28.655, 28.946, 29.242, 29.543, 29.849, 30.159, 30.474, 30.794, 31.119, 31.448, 31.782, 32.121, 32.463, 32.81, 33.161, 33.516, 33.874, 34.237, 34.603, 34.972, 35.346, 35.723, 36.104, 36.49, 36.881, 37.275, 37.676, 38.081, 38.493];
let pesogirluptoten97 = [4.166233844, 5.390452934, 6.530128974, 7.403373221, 8.112340538, 8.699851889, 9.198221871, 9.63592136, 10.02975323, 10.38876954, 10.72108765, 11.03400589, 11.33322426, 11.62202084, 11.90386135, 12.17991241, 12.452731, 12.72335366, 12.99215985, 13.26017696, 13.52774813, 13.79624719, 14.06607982, 14.33782601, 14.61120774, 14.88587271, 15.16084287, 15.43536905, 15.70808924, 15.97892473, 16.24703116, 16.51290645, 16.77716648, 17.04114875, 17.30507299, 17.57011181, 17.8366669, 18.10540175, 18.3753459, 18.64728726, 18.92027863, 19.19396776, 19.4685925, 19.74352501, 20.01865183, 20.2938336, 20.56962432, 20.8447546, 21.12045359, 21.39698716, 21.67364778, 21.95036209, 22.22784317, 22.50531725, 22.78238366, 23.05895406, 23.33549426, 23.61075492, 23.88555778, 24.15875987, 24.43134005, 24.336, 24.601, 24.866, 25.132, 25.398, 25.664, 25.93, 26.197, 26.465, 26.733, 27.002, 27.273, 27.545, 27.819, 28.095, 28.375, 28.658, 28.945, 29.234, 29.529, 29.828, 30.132, 30.441, 30.755, 31.075, 31.399, 31.73, 32.065, 32.406, 32.752, 33.103, 33.46, 33.823, 34.192, 34.567, 34.947, 35.334, 35.727, 36.126, 36.53, 36.94, 37.355, 37.778, 38.204, 38.636, 39.073, 39.514, 39.96, 40.411, 40.867, 41.326, 41.791, 42.26, 42.734, 43.214, 43.699, 44.189, 44.687, 45.19, 45.7];

let pesochilduptofive3 = [2.507275485, 3.44896397, 4.386343419, 5.092011701, 5.639589521, 6.078883524, 6.438807245, 6.742484196, 7.005389769, 7.239953557, 7.454396102, 7.654824985, 7.845122133, 8.027434962, 8.203733542, 8.375266236, 8.543261438, 8.708052604, 8.870227865, 9.029642443, 9.18740456, 9.343706166, 9.498725788, 9.652437982, 9.804768679, 9.95527789, 10.10362861, 10.2491278, 10.3916705, 10.53124544, 10.66789829, 10.80162797, 10.93296534, 11.06190537, 11.18937391, 11.31547311, 11.44037199, 11.56473953, 11.68842655, 11.81186132, 11.93498883, 12.0578086, 12.18020754, 12.30210114, 12.42360015, 12.5443227, 12.66413272, 12.78353233, 12.90208454, 13.0200962, 13.13760448, 13.2542821, 13.37104444, 13.48700357, 13.60268368, 13.71804602, 13.83301377, 13.94746862, 14.06145291, 14.17504654, 14.28797349];
let pesochilduptofive15 = [2.864533658, 3.882571386, 4.888732085, 5.639117925, 6.220651345, 6.689475369, 7.076408251, 7.405121773, 7.691204412, 7.947417844, 8.182333384, 8.402290682, 8.611470291, 8.812340239, 9.006934275, 9.196675627, 9.382878153, 9.565974517, 9.746490881, 9.924484526, 10.10095091, 10.27621187, 10.45044389, 10.62355703, 10.79546027, 10.965693, 11.13368609, 11.2987861, 11.46076414, 11.61948795, 11.77503936, 11.92749055, 12.07732447, 12.22460995, 12.3702053, 12.51427676, 12.65713265, 12.79930193, 12.94080303, 13.08202521, 13.22301334, 13.36376733, 13.50424774, 13.6443629, 13.78415093, 13.92341491, 14.06198287, 14.20021341, 14.33782602, 14.47504882, 14.61195326, 14.74829719, 14.88471586, 15.02057964, 15.15626355, 15.29169395, 15.42678417, 15.56143332, 15.69565628, 15.82954109, 15.96281213];
let pesochilduptofive50 = [3.3464, 4.4709, 5.5675, 6.3762, 7.0023, 7.5105, 7.934, 8.297, 8.6151, 8.9014, 9.1649, 9.4122, 9.6479, 9.8749, 10.0953, 10.3108, 10.5228, 10.7319, 10.9385, 11.143, 11.3462, 11.5486, 11.7504, 11.9514, 12.1515, 12.3502, 12.5466, 12.7401, 12.9303, 13.1169, 13.3, 13.4798, 13.6567, 13.8309, 14.0031, 14.1736, 14.3429, 14.5113, 14.6791, 14.8466, 15.014, 15.1813, 15.3486, 15.5158, 15.6828, 15.8497, 16.0163, 16.1827, 16.3489, 16.515, 16.6811, 16.8471, 17.0132, 17.1792, 17.3452, 17.5111, 17.6768, 17.8422, 18.0073, 18.1722, 18.3366];
let pesochilduptofive85 = [3.878184074, 5.125624368, 6.319956185, 7.191134236, 7.865343172, 8.416791852, 8.881110848, 9.282846154, 9.637451689, 9.958273885, 10.25473688, 10.53366534, 10.80014737, 11.05755949, 11.3080509, 11.5536824, 11.79591107, 12.03556667, 12.27285389, 12.50864446, 12.74346693, 12.978021, 13.2125695, 13.44676016, 13.68050281, 13.9132376, 14.14367736, 14.37127935, 14.59545103, 14.81570296, 15.03211139, 15.24505754, 15.45482566, 15.66180472, 15.86642666, 16.0692064, 16.27085887, 16.47137737, 16.67145, 16.87122661, 17.07110606, 17.2710879, 17.47148341, 17.67218592, 17.87288549, 18.07407519, 18.27555553, 18.4770491, 18.67896485, 18.88123199, 19.08395475, 19.28722828, 19.49069623, 19.69474685, 19.89907003, 20.10356987, 20.30813205, 20.51262184, 20.71705858, 20.92155746, 21.12575185];
let pesochilduptofive97 = [4.349896496, 5.711616453, 6.991505691, 7.916985943, 8.633306755, 9.223203048, 9.724323172, 10.16134281, 10.549467, 10.9021624, 11.22919334, 11.53753383, 11.83272912, 12.11857844, 12.39725508, 12.67118934, 12.94185592, 13.2103286, 13.47658968, 13.74201212, 14.00683594, 14.27193995, 14.53767695, 14.80353233, 15.06944319, 15.33478141, 15.59789838, 15.85829929, 16.11521889, 16.36799749, 16.61664883, 16.86175177, 17.10346672, 17.34239138, 17.57863366, 17.81296261, 18.04628532, 18.27827468, 18.51003463, 18.74153354, 18.97337166, 19.2055476, 19.43861483, 19.67246356, 19.90654318, 20.14175531, 20.37793297, 20.61437733, 20.8519548, 21.09041682, 21.32984377, 21.57053975, 21.81158798, 22.05400537, 22.29701576, 22.54056179, 22.78451738, 23.02867989, 23.27312378, 23.51798023, 23.76278191];

let pesochilduptoten3 = [2.507275485, 3.44896397, 4.386343419, 5.092011701, 5.639589521, 6.078883524, 6.438807245, 6.742484196, 7.005389769, 7.239953557, 7.454396102, 7.654824985, 7.845122133, 8.027434962, 8.203733542, 8.375266236, 8.543261438, 8.708052604, 8.870227865, 9.029642443, 9.18740456, 9.343706166, 9.498725788, 9.652437982, 9.804768679, 9.95527789, 10.10362861, 10.2491278, 10.3916705, 10.53124544, 10.66789829, 10.80162797, 10.93296534, 11.06190537, 11.18937391, 11.31547311, 11.44037199, 11.56473953, 11.68842655, 11.81186132, 11.93498883, 12.0578086, 12.18020754, 12.30210114, 12.42360015, 12.5443227, 12.66413272, 12.78353233, 12.90208454, 13.0200962, 13.13760448, 13.2542821, 13.37104444, 13.48700357, 13.60268368, 13.71804602, 13.83301377, 13.94746862, 14.06145291, 14.17504654, 14.28797349, 14.58, 14.711, 14.844, 14.978, 15.114, 15.251, 15.389, 15.53, 15.672, 15.815, 15.959, 16.105, 16.252, 16.4, 16.548, 16.697, 16.848, 16.999, 17.15, 17.303, 17.455, 17.609, 17.762, 17.916, 18.07, 18.224, 18.378, 18.532, 18.686, 18.841, 18.995, 19.148, 19.302, 19.456, 19.609, 19.763, 19.916, 20.069, 20.222, 20.375, 20.528, 20.681, 20.833, 20.986, 21.14, 21.293, 21.448, 21.603, 21.759, 21.917, 22.076, 22.236, 22.398, 22.561, 22.727, 22.894, 23.063, 23.234, 23.406, 23.581];
let pesochilduptoten15 = [2.864533658, 3.882571386, 4.888732085, 5.639117925, 6.220651345, 6.689475369, 7.076408251, 7.405121773, 7.691204412, 7.947417844, 8.182333384, 8.402290682, 8.611470291, 8.812340239, 9.006934275, 9.196675627, 9.382878153, 9.565974517, 9.746490881, 9.924484526, 10.10095091, 10.27621187, 10.45044389, 10.62355703, 10.79546027, 10.965693, 11.13368609, 11.2987861, 11.46076414, 11.61948795, 11.77503936, 11.92749055, 12.07732447, 12.22460995, 12.3702053, 12.51427676, 12.65713265, 12.79930193, 12.94080303, 13.08202521, 13.22301334, 13.36376733, 13.50424774, 13.6443629, 13.78415093, 13.92341491, 14.06198287, 14.20021341, 14.33782602, 14.47504882, 14.61195326, 14.74829719, 14.88471586, 15.02057964, 15.15626355, 15.29169395, 15.42678417, 15.56143332, 15.69565628, 15.82954109, 15.96281213, 16.204, 16.352, 16.501, 16.652, 16.804, 16.957, 17.113, 17.27, 17.428, 17.588, 17.749, 17.912, 18.076, 18.24, 18.406, 18.572, 18.739, 18.908, 19.077, 19.247, 19.418, 19.59, 19.762, 19.935, 20.108, 20.281, 20.455, 20.629, 20.803, 20.978, 21.153, 21.328, 21.504, 21.679, 21.855, 22.031, 22.208, 22.385, 22.562, 22.74, 22.918, 23.096, 23.275, 23.454, 23.635, 23.816, 23.998, 24.182, 24.368, 24.555, 24.744, 24.936, 25.129, 25.325, 25.523, 25.724, 25.927, 26.133, 26.341, 26.551];
let pesochilduptoten50 = [3.3464, 4.4709, 5.5675, 6.3762, 7.0023, 7.5105, 7.934, 8.297, 8.6151, 8.9014, 9.1649, 9.4122, 9.6479, 9.8749, 10.0953, 10.3108, 10.5228, 10.7319, 10.9385, 11.143, 11.3462, 11.5486, 11.7504, 11.9514, 12.1515, 12.3502, 12.5466, 12.7401, 12.9303, 13.1169, 13.3, 13.4798, 13.6567, 13.8309, 14.0031, 14.1736, 14.3429, 14.5113, 14.6791, 14.8466, 15.014, 15.1813, 15.3486, 15.5158, 15.6828, 15.8497, 16.0163, 16.1827, 16.3489, 16.515, 16.6811, 16.8471, 17.0132, 17.1792, 17.3452, 17.5111, 17.6768, 17.8422, 18.0073, 18.1722, 18.3366, 18.506, 18.68, 18.856, 19.034, 19.213, 19.394, 19.576, 19.761, 19.947, 20.134, 20.324, 20.514, 20.705, 20.898, 21.092, 21.287, 21.483, 21.681, 21.88, 22.08, 22.281, 22.484, 22.687, 22.892, 23.097, 23.303, 23.51, 23.718, 23.927, 24.137, 24.348, 24.56, 24.772, 24.986, 25.2, 25.416, 25.633, 25.851, 26.071, 26.291, 26.513, 26.736, 26.96, 27.186, 27.414, 27.643, 27.875, 28.109, 28.346, 28.585, 28.828, 29.073, 29.322, 29.574, 29.829, 30.088, 30.35, 30.616, 30.885, 31.159];
let pesochilduptoten85 = [3.878184074, 5.125624368, 6.319956185, 7.191134236, 7.865343172, 8.416791852, 8.881110848, 9.282846154, 9.637451689, 9.958273885, 10.25473688, 10.53366534, 10.80014737, 11.05755949, 11.3080509, 11.5536824, 11.79591107, 12.03556667, 12.27285389, 12.50864446, 12.74346693, 12.978021, 13.2125695, 13.44676016, 13.68050281, 13.9132376, 14.14367736, 14.37127935, 14.59545103, 14.81570296, 15.03211139, 15.24505754, 15.45482566, 15.66180472, 15.86642666, 16.0692064, 16.27085887, 16.47137737, 16.67145, 16.87122661, 17.07110606, 17.2710879, 17.47148341, 17.67218592, 17.87288549, 18.07407519, 18.27555553, 18.4770491, 18.67896485, 18.88123199, 19.08395475, 19.28722828, 19.49069623, 19.69474685, 19.89907003, 20.10356987, 20.30813205, 20.51262184, 20.71705858, 20.92155746, 21.12575185, 21.212, 21.423, 21.636, 21.851, 22.068, 22.286, 22.507, 22.729, 22.954, 23.18, 23.408, 23.637, 23.868, 24.101, 24.335, 24.571, 24.809, 25.048, 25.29, 25.533, 25.778, 26.025, 26.273, 26.524, 26.776, 27.03, 27.286, 27.543, 27.803, 28.065, 28.328, 28.594, 28.862, 29.132, 29.405, 29.68, 29.957, 30.238, 30.52, 30.806, 31.093, 31.384, 31.678, 31.974, 32.274, 32.578, 32.885, 33.196, 33.512, 33.832, 34.155, 34.484, 34.817, 35.155, 35.497, 35.844, 36.197, 36.554, 36.916, 37.283];
let pesochilduptoten97 = [4.349896496, 5.711616453, 6.991505691, 7.916985943, 8.633306755, 9.223203048, 9.724323172, 10.16134281, 10.549467, 10.9021624, 11.22919334, 11.53753383, 11.83272912, 12.11857844, 12.39725508, 12.67118934, 12.94185592, 13.2103286, 13.47658968, 13.74201212, 14.00683594, 14.27193995, 14.53767695, 14.80353233, 15.06944319, 15.33478141, 15.59789838, 15.85829929, 16.11521889, 16.36799749, 16.61664883, 16.86175177, 17.10346672, 17.34239138, 17.57863366, 17.81296261, 18.04628532, 18.27827468, 18.51003463, 18.74153354, 18.97337166, 19.2055476, 19.43861483, 19.67246356, 19.90654318, 20.14175531, 20.37793297, 20.61437733, 20.8519548, 21.09041682, 21.32984377, 21.57053975, 21.81158798, 22.05400537, 22.29701576, 22.54056179, 22.78451738, 23.02867989, 23.27312378, 23.51798023, 23.76278191, 23.774, 24.026, 24.279, 24.535, 24.793, 25.053, 25.315, 25.58, 25.847, 26.117, 26.388, 26.661, 26.937, 27.215, 27.494, 27.777, 28.061, 28.349, 28.639, 28.931, 29.227, 29.525, 29.826, 30.13, 30.436, 30.746, 31.059, 31.375, 31.695, 32.017, 32.343, 32.674, 33.007, 33.345, 33.687, 34.033, 34.384, 34.74, 35.099, 35.464, 35.832, 36.206, 36.585, 36.969, 37.358, 37.753, 38.155, 38.562, 38.975, 39.395, 39.82, 40.252, 40.69, 41.135, 41.587, 42.044, 42.508, 42.978, 43.455, 43.938];
let weightPercentileLabel=$("input[name='weightpercentilelabel']").val();
let result;
let childTillThirteen=$("input[name='childuptothirteen']").val();
let childTillFive=$("input[name='childuptofive']").val();
let childTillTen=$("input[name='childuptoten']").val();
let tillThirteen=$("input[name='uptothirteen']").val();
let tillFive=$("input[name='uptofive']").val();

function childUpto (y,roundedAge){
  /* childuptothirteen 0-13 */
  if (y.peso <= pesochilduptothirteen15[roundedAge]) {
   result = 'pesoNinioBajo';
} else if (y.peso > pesochilduptothirteen15[roundedAge] && y.peso < pesochilduptothirteen85[roundedAge]) {
   result = 'pesoNinioMedio';
} else if (y.peso > pesochilduptothirteen85[roundedAge] && y.peso <= pesochilduptothirteen97[roundedAge]) {
   result = 'pesoNinioCorrecto';
} else {
   result = 'pesoNinioAlto';
}
}
function childFive(y,roundedAge){
 /* childuptofive 0-60 */
 if (y.peso <= pesochilduptofive15[roundedAge]) {
   result = 'pesoNinioBajo';
} else if (y.peso > pesochilduptofive15[roundedAge] && y.peso < pesochilduptofive85[roundedAge]) {
   result = 'pesoNinioMedio';
} else if (y.peso > pesochilduptofive85[roundedAge] && y.peso <= pesochilduptofive97[roundedAge]) {
   result = 'pesoNinioCorrecto';
} else {
   result = 'pesoNinioAlto';
}
}
function childTwentyfour(y,roundedAge){
 /* childuptoten 24-120 */
 if (y.peso <= pesochilduptoten15[roundedAge]) {
   result = 'pesoNinioBajo';
} else if (y.peso > pesochilduptoten15[roundedAge] && y.peso < pesochilduptoten85[roundedAge]) {
   result = 'pesoNinioMedio';
} else if (y.peso > pesochilduptoten85[roundedAge] && y.peso <= pesochilduptoten97[roundedAge]) {
   result = 'pesoNinioCorrecto';
} else {
   result = 'pesoNinioAlto';
}
}
function girlThirteen(y,roundedAge){
 /* girluptothirteen 0-13 */
 if (y.peso <= pesogirluptothirteen15[roundedAge]) {
   result = 'pesoNiniaBajo';
} else if (y.peso > pesogirluptothirteen15[roundedAge] && y.peso <= pesogirluptothirteen85[roundedAge]) {
   result = 'pesoNiniaMedio';
} else if (y.peso > pesogirluptothirteen85[roundedAge] && y.peso <= pesogirluptothirteen97[roundedAge]) {
   result = 'pesoNiniaCorrecto';
} else {
   result = 'pesoNiniaAlto';
}
}
function girlFive(y,roundedAge){
 /* girluptofive 0-60 */
 if (y.peso <= pesogirluptofive15[roundedAge]) {
   result = 'pesoNiniaBajo';
} else if (y.peso > pesogirluptofive15[roundedAge] && y.peso < pesogirluptofive85[roundedAge]) {
   result = 'pesoNiniaMedio';
} else if (y.peso > pesogirluptofive85[roundedAge] && y.peso <= pesogirluptofive97[roundedAge]) {
   result = 'pesoNiniaCorrecto';
} else {
   result = 'pesoNiniaAlto';
}
}
function girlTen(y,roundedAge){
 /* girluptoten 24-12 */
 if (y.peso <= pesogirluptoten15[roundedAge]) {
   result = 'pesoNiniaBajo';
} else if (y.peso > pesogirluptoten15[roundedAge] && y.peso < pesogirluptoten85[roundedAge]) {
   result = 'pesoNiniaMedio';
} else if (y.peso > pesogirluptoten85[roundedAge] && y.peso <= pesogirluptoten97[roundedAge]) {
   result = 'pesoNiniaCorrecto';
} else {
   result = 'pesoNiniaAlto';
}
}
function girlupThirteen(roundedAge){
 /* girluptothirteen 0-13 */
 if (y.altura <= alturagirluptothirteen15[roundedAge]) {
   result = 'estaturaNiniaBajo';
} else if (y.altura > alturagirluptothirteen15[roundedAge] && y.altura <= alturagirluptothirteen85[roundedAge]) {
   result = 'estaturaNiniaMedio';
} else {
   result = 'estaturaNiniaCorrecto';
}
}
function girlupFive(roundedAge){
 /* girluptofive 0-60 */
 if (y.altura <= alturagirluptofive15[roundedAge]) {
   result = 'estaturaNiniaBajo';
} else if (y.altura > alturagirluptofive15[roundedAge] && y.altura <= alturagirluptofive85[roundedAge]) {
   result = 'estaturaNiniaMedio';
} else {
   result = 'estaturaNiniaCorrecto';
}
}
function girlupTen(roundedAge){
 /* girluptoten 24-12 */
 if (y.altura <= alturagirluptoten15[roundedAge -24]) {
   result = 'estaturaNiniaBajo';
} else if (y.altura > alturagirluptoten15[roundedAge - 24] && y.altura <= alturagirluptoten85[roundedAge - 24]) {
   result = 'estaturaNiniaMedio';
} else {
   result = 'estaturaNiniaCorrecto';
}
}
function childupThirteen(roundedAge){
 /* childuptothirteen 0-13 */
 if (y.altura <= alturachilduptothirteen15[roundedAge]) {
   result = 'estaturaNinioBajo';
} else if (y.altura > alturachilduptothirteen15[roundedAge] && y.altura <= alturachilduptothirteen85[roundedAge]) {
   result = 'estaturaNinioMedio';
} else {
   result = 'estaturaNinioCorrecto';
}
}
function childuptoFivezerotosixty(roundedAge){
 /* childuptofive 0-60 */
 if (y.altura <= alturachilduptofive15[roundedAge]) {
   result = 'estaturaNinioBajo';
} else if (y.altura > alturachilduptofive15[roundedAge] && y.altura <= alturachilduptofive85[roundedAge]) {
   result = 'estaturaNinioMedio';
} else {
   result = 'estaturaNinioCorrecto';
}
}
function childuptoTentwentyfour(roundedAge){
 /* childuptoten 24-120 */
 if (y.altura <= alturachilduptoten15[roundedAge - 24]) {
   result = 'estaturaNinioBajo';
} else if (y.altura > alturachilduptoten15[roundedAge - 24] && y.altura <= alturachilduptoten85[roundedAge - 24]) {
   result = 'estaturaNinioMedio';
} else {
   result = 'estaturaNinioCorrecto';
}
}
function dayhereNinty(girlLabel,tillTen,weeksLabel,monthsLabel,dadosGraficoAltura,days){
 if (daysHere < 90){
   let weeksHere = (days / 7);
   dadosGraficoAltura.tipo = girlLabel + dadosGraficoAltura.genero + ' ' + tillThirteen;
   dadosGraficoAltura.idade = weeksHere.toFixed(1);
   dadosGraficoAltura.idadeOffset = parseFloat(0);
   dadosGraficoAltura.unidadeTempo = weeksLabel;
 }
 else if (daysHere >= 0 && daysHere <= 1825){
   let month2 = (daysHere / 30.4375);
   dadosGraficoAltura.tipo = girlLabel + dadosGraficoAltura.genero + ' ' + tillFive;
   dadosGraficoAltura.idade = month2.toFixed(1);
   dadosGraficoAltura.idadeOffset = parseFloat(0);
   dadosGraficoAltura.unidadeTempo = monthsLabel;
 }
 else{
   let month1 = (daysHere / 30.4375);
   dadosGraficoAltura.tipo = girlLabel + dadosGraficoAltura.genero + ' ' + tillTen;
   dadosGraficoAltura.idade = month1.toFixed(1);
   dadosGraficoAltura.idadeOffset = parseFloat(24);
   dadosGraficoAltura.unidadeTempo = monthsLabel;
 }

}
function daysNinty(girlLabel,tillTen,weeksLabel,menInLabel,monthsLabel,days,dadosGraficoPeso){
 if (days < 90){
   let weeks = (days / 7);
   dadosGraficoPeso.tipo = menInLabel + dadosGraficoPeso.genero + ' ' + tillThirteen;
   dadosGraficoPeso.idade = weeks.toFixed(1);
   dadosGraficoPeso.idadeOffset = parseFloat(0);
   dadosGraficoPeso.unidadeTempo = weeksLabel;
 }
 else if (days >= 90 && days < 1825){
   let months = (days / 30.4375);
   dadosGraficoPeso.tipo = girlLabel + dadosGraficoPeso.genero + ' ' + tillFive;
   dadosGraficoPeso.idade = months.toFixed(1);
   dadosGraficoPeso.idadeOffset = parseFloat(0);
   dadosGraficoPeso.unidadeTempo = monthsLabel;
 }
 else{
   let month = (days / 30.4375);
   dadosGraficoPeso.tipo = girlLabel + dadosGraficoPeso.genero + ' ' + tillTen;
   dadosGraficoPeso.idade = month.toFixed(1);
   dadosGraficoPeso.idadeOffset = parseFloat(0);
   dadosGraficoPeso.unidadeTempo = monthsLabel;
 }
}
function pesoCalculator(Constants,dadosGraficoPeso){
 if ($("input[name='sexo']:checked").val() == Constants.CALCULATOR_FEMALE){
   dadosGraficoPeso.genero = Constants.CALCULATOR_GENERO_A;
   dadosGraficoPeso.legenda = Constants.CALCULATOR_DAUGHTER;
 }
 else{
   dadosGraficoPeso.genero = Constants.CALCULATOR_GENERO_O;
   dadosGraficoPeso.legenda = Constants.CALCULATOR_SON;
 } 
}
function caluculatorDay(dobError,dateToday,dateNasc,CALCULATOR_DAY_ID,CALCULATOR_MONTH_ID,CALCULATOR_YEAR_ID){
 if ((!(dateNasc.getDate() == CALCULATOR_DAY_ID && dateNasc.getMonth() + 1 == CALCULATOR_MONTH_ID && dateNasc.getFullYear() == CALCULATOR_YEAR_ID)) || dateNasc > dateToday){
   alert(dobError + '\n' + errorLabel);
   $(".a-container--highchart ~ .button").addClass('d-none');
   return false;
 }
}
function weighterrorLabel(weightError,intRegex,floatRegex,strPeso,errorLabel){
 if ((!intRegex.test(strPeso) && !floatRegex.test(strPeso)) || strPeso < 2.000 || strPeso > 59.900){
   alert(weightError + '\n' + errorLabel);
   $(".a-container--highchart ~ .button").addClass('d-none');
   return false;
 }
}
function getdateCalculator(dobError,errorLabel,datesToday,datesNasc,CALCULATOR_DAY_ID,CALCULATOR_MONTH_ID,CALCULATOR_YEAR_ID){
 if ((!(datesNasc.getDate() == CALCULATOR_DAY_ID && datesNasc.getMonth() + 1 == CALCULATOR_MONTH_ID && datesNasc.getFullYear() == CALCULATOR_YEAR_ID)) || datesNasc > datesToday){
   alert(dobError + '\n' + errorLabel);
   $(".a-container--highchart ~ .button").addClass('d-none');
   return false;
 }
}
function gendererrorLabel(genderError,errorLabel,dadosGraficoAltura,Constants){
 if (typeof $("input[name='sexo']:checked").val() == 'undefined'){
   alert(genderError + '\n' + errorLabel);
   $(".a-container--highchart ~ .button").addClass('d-none');
   return false;
 }
 if ($("input[name='sexo']:checked").val() == Constants.CALCULATOR_FEMALE){
   dadosGraficoAltura.genero = Constants.CALCULATOR_GENERO_A;
   dadosGraficoAltura.legenda = Constants.CALCULATOR_DAUGHTER;
 }
 else{
   dadosGraficoAltura.genero = Constants.CALCULATOR_GENERO_O;
   dadosGraficoAltura.legenda = Constants.CALCULATOR_SON;
 }
}
function childroundEdge(y){
  let is13 = y.tipo.includes('13');
 let is5 = y.tipo.includes('5');
 let is10 = y.tipo.includes('10');
 let roundedAge = Math.round(y.idade);

  if (y.genero == 'a') {
    if (is13)  {
       girlupThirteen(roundedAge);
        
    } else if (is5)  {
       girlupFive(roundedAge);
        
    } else if (is10)  {
        girlupTen(roundedAge);
        
    }
} else if (y.genero == 'o') {
    if (is13)  {
      childupThirteen(roundedAge);
        
    } else if (is5)  {
       childuptoFivezerotosixty(roundedAge);
        
    } else if (is10)  {
        childuptoTentwentyfour(roundedAge);
        
    }
}
}
function highcartEdge(y){
  let is13 = y.tipo.includes('13');
  let is5 = y.tipo.includes('5');
  let is10 = y.tipo.includes('10');
  let roundedAge = Math.round(y.idade);
  if (y.genero == 'a') {
    if (is13)  {
      girlThirteen(y,roundedAge);
        
    } else if (is5)  {
      girlFive(y,roundedAge);
        
    } else if (is10)  {
      girlTen(y,roundedAge);
        
    }
} else if (y.genero == 'o') {
    if (is13)  {
      childUpto(y,roundedAge);
       
    } else if (is5)  {
      childFive(y,roundedAge);
        
    } else if (is10)  {
      childTwentyfour(y,roundedAge);
        
    }
}
}
function childPregnancyedge(){
  if($('.a-container--pregnancy-calc').length > 0) {
    $('#pregnancy-date span')[0].innerHTML = new Date().addDays(0);
    $('#pregnancy-weeks span')[0].innerHTML = 0;
    $('#pregnancy-days span')[0].innerHTML = 0; 
  }
  
  $("input[name='singleDate']").on('keypress',function (e) {
    if($('.a-container--pregnancy-calc .form-control.a-input-control').val()) {
      $('.a-container--pregnancy-calc .btn').css('pointer-events','');
    }
    else {
      $('.a-container--pregnancy-calc .btn').css('pointer-events','none');
    }
  });
}
$(document).on('ready',function() {
  $('.formcontainer.o-form-container--base.o-form-container--calculator-v2 .btn').css('pointer-events','none');
  $($("input[name= 'tipo']")[0]).attr("checked", true);
  $($("input[name= 'sexo']")[0]).attr("checked", true);
});

function calcGlucerna(){
  $('.formcontainer.o-form-container--base.o-form-container--calculator-v2 .button').on('click',function(event){
    let height = $("input[name='heightField']").val();
    let weight = $("input[name='weightField']").val();
    if (height) {
        height = parseFloat(height);
        if (isNaN(height)) {
            return false;
        }
    }
    if (weight) {
        weight = parseFloat(weight);
        if (isNaN(weight)) {
            return false;
        }
    }
    let bmi = weight/(height*height);
    $("input[name='bmiResult']").val(bmi.toFixed(3));
  });
}
function calculatorStartsPreg(){
  $(".a-container--pregnancy-calc .button").on('click',function(event) {
    if($('.a-container--pregnancy-calc .form-control.a-input-control').val()) {
    function my_date(date_string) {
        let date_components = date_string.split("/");
        let day = date_components[0];
        let month = date_components[1];
        let year = date_components[2];
        return new Date(year, month - 1, day);
    }
    let formattedDate = my_date($('.a-container--pregnancy-calc .form-control.a-input-control').val());
    let datePlus281days = my_date(formattedDate.addDays(281));
    let todayDate = new Date();
    let milli_secs = datePlus281days.getTime() - todayDate.getTime();
    let days = milli_secs / (1000 * 3600 * 24);
    function diff_weeks(date2, date1)
     {
      let diff= (date2.getTime() - date1.getTime()) / 1000;
      diff /= (60 * 60 * 24 * 7);
      return Math.abs(Math.round(diff));
     }
    
    let dt1 = formattedDate;
    let dt2 = new Date();
    $('#pregnancy-date span')[0].innerHTML = formattedDate.addDays(281);
    $('#pregnancy-weeks span')[0].innerHTML = diff_weeks(dt1, dt2);
    $('#pregnancy-days span')[0].innerHTML = Math.round(Math.ceil(days));
  }
  });
  /*pregnancy calculator ends here */
  
  $($('.options.o-form-option--base.o-form-option-dropdown--style1')[0]).addClass('d-none');
  $($('.options.o-form-option--base.o-form-option-dropdown--style2')[0]).addClass('d-none');
  $("input[name= 'tipo']").on('change',function() {
    if ($("input[name= 'tipo']:checked").val() === 'peso') {
        if ($(".options.o-form-option--base.o-form-option-dropdown--style1").length > 0) {
          $($('.options.o-form-option--base.o-form-option-dropdown--style1')[1]).addClass('d-none');
          $($('.options.o-form-option--base.o-form-option-dropdown--style1')[0]).removeClass('d-none');
        } else {
          $($('.options.o-form-option--base.o-form-option-dropdown--style2')[1]).addClass('d-none');
          $($('.options.o-form-option--base.o-form-option-dropdown--style2')[0]).removeClass('d-none');
        }
  } else {
    if ($(".options.o-form-option--base.o-form-option-dropdown--style1").length > 0) {
        $($('.options.o-form-option--base.o-form-option-dropdown--style1')[0]).addClass('d-none');
        $($('.options.o-form-option--base.o-form-option-dropdown--style1')[1]).removeClass('d-none');
    } else {
        $($('.options.o-form-option--base.o-form-option-dropdown--style2')[0]).addClass('d-none');
        $($('.options.o-form-option--base.o-form-option-dropdown--style2')[1]).removeClass('d-none');
    }
  }
    $(".o-form-option--base.o-form-option-radio--style1 input[name= 'tipo']:checked").closest('.a-radio.a-radio--horizontal').css({backgroundColor: "#be9dc8"});
    $(".o-form-option--base.o-form-option-radio--style1 input[name= 'tipo']:not(:checked)").closest('.a-radio.a-radio--horizontal').css({backgroundColor: "#fff"});
    $(".o-form-option--base.o-form-option-radio--style1 input[name= 'tipo']:checked").prev().css({color : "#f5ecd9"});
    $(".o-form-option--base.o-form-option-radio--style1 input[name= 'tipo']:not(:checked)").prev().css({color : "#6f5987"});
  
    $(".o-form-option--base.o-form-option-radio--style2 input[name= 'tipo']:checked").closest('.a-radio.a-radio--horizontal').css({backgroundImage: "linear-gradient(to right, #21C6FF, #5FF2DC)"});
    $(".o-form-option--base.o-form-option-radio--style2 input[name= 'tipo']:not(:checked)").closest('.a-radio.a-radio--horizontal').css({backgroundColor: "#fff", backgroundImage:"unset"});
    $(".o-form-option--base.o-form-option-radio--style2 input[name= 'tipo']:checked").prev().css({color : "#FFFFFF"});
    $(".o-form-option--base.o-form-option-radio--style2 input[name= 'tipo']:not(:checked)").prev().css({color : "#21C6FF"});
  });
}
function controlCalc(girlTillThirteen,girlTillFive,girlTillTen,Constants,dadosGraficoPeso){
  if (dadosGraficoPeso.genero == Constants.CALCULATOR_GENERO_O) {
    if (dadosGraficoPeso.days < 90){
      dadosGraficoPeso.tipo = childTillThirteen;
    }
    else if (dadosGraficoPeso.days >= 90 && dadosGraficoPeso.days < 1825){
      dadosGraficoPeso.tipo = childTillFive;
    }
    else{
      dadosGraficoPeso.tipo = childTillTen;
    }
  }
  else{
    if (dadosGraficoPeso.days < 90){
      dadosGraficoPeso.tipo = girlTillThirteen;
    }
    else if (dadosGraficoPeso.days >= 90 && dadosGraficoPeso.days < 1825){
      dadosGraficoPeso.tipo = girlTillFive;
    }
    else{
      dadosGraficoPeso.tipo = girlTillTen;
    }
  }
}
function formcalculaterPedia(ageLabel,girlTillThirteen,girlTillFive,girlTillTen,getChildPercentPeso,dadosGraficoPeso,a){
  if (dadosGraficoPeso.tipo == girlTillThirteen) {
    a.xAxis[0].setCategories([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]);
    a.addSeries({
      name: "3%",
      data: pesogirluptothirteen3
    }, false);
    a.addSeries({
      name: "15%",
      data: pesogirluptothirteen15
    }, false);
    a.addSeries({
      name: "50%",
      data: pesogirluptothirteen50
    }, false);
    a.addSeries({
      name: "85%",
      data: pesogirluptothirteen85
    }, false);
    a.addSeries({
      name: "97%",
      data: pesogirluptothirteen97
    }, false);
  }
  if (dadosGraficoPeso.tipo == childTillThirteen) {
    a.xAxis[0].setCategories([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]);
    a.addSeries({
      name: "3%",
      data: pesochilduptothirteen3
    }, false);
    a.addSeries({
      name: "15%",
      data: pesochilduptothirteen15
    }, false);
    a.addSeries({
      name: "50%",
      data: pesochilduptothirteen50
    }, false);
    a.addSeries({
      name: "85%",
      data: pesochilduptothirteen85
    }, false);
    a.addSeries({
      name: "97%",
      data: pesochilduptothirteen97
    }, false);
  }
  if (dadosGraficoPeso.tipo == girlTillFive) {
    a.xAxis[0].setCategories([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]);
    a.addSeries({
      name: "3%",
      data: pesogirluptofive3
    }, false);
    a.addSeries({
      name: "15%",
      data: pesogirluptofive15
    }, false);
    a.addSeries({
      name: "50%",
      data: pesogirluptofive50
    }, false);
    a.addSeries({
      name: "85%",
      data: pesogirluptofive85
    }, false);
    a.addSeries({
      name: "97%",
      data: pesogirluptofive97
    }, false);
    a.xAxis[0].options.tickInterval = 6;
  }
  if (dadosGraficoPeso.tipo == girlTillTen) {
    a.xAxis[0].setCategories([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120]);
    a.addSeries({
      name: "3%",
      data: pesogirluptoten3
    }, false);
    a.addSeries({
      name: "15%",
      data: pesogirluptoten15
    }, false);
    a.addSeries({
      name: "50%",
      data: pesogirluptoten50
    }, false);
    a.addSeries({
      name: "85%",
      data: pesogirluptoten85
    }, false);
    a.addSeries({
      name: "97%",
      data: pesogirluptoten97
    }, false);
    a.xAxis[0].options.tickInterval = 6;
  }
  if (dadosGraficoPeso.tipo == childTillFive) {
    a.xAxis[0].setCategories([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]);
    a.addSeries({
      name: "3%",
      data: pesochilduptofive3
    }, false);
    a.addSeries({
      name: "15%",
      data: pesochilduptofive15
    }, false);
    a.addSeries({
      name: "50%",
      data: pesochilduptofive50
    }, false);
    a.addSeries({
      name: "85%",
      data: pesochilduptofive85
    }, false);
    a.addSeries({
      name: "97%",
      data: pesochilduptofive97
    }, false);
    a.xAxis[0].options.tickInterval = 6;
  }
  if (dadosGraficoPeso.tipo == childTillTen) {
    a.xAxis[0].setCategories([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120]);
    a.addSeries({
      name: "3%",
      data: pesochilduptoten3
    }, false);
    a.addSeries({
      name: "15%",
      data: pesochilduptoten15
    }, false);
    a.addSeries({
      name: "50%",
      data: pesochilduptoten50
    }, false);
    a.addSeries({
      name: "85%",
      data: pesochilduptoten85
    }, false);
    a.addSeries({
      name: "97%",
      data: pesochilduptoten97
    }, false);
    a.xAxis[0].options.tickInterval = 6;
  }
  a.setTitle({
      text: weightPercentileLabel + " " + dadosGraficoPeso.tipo
  });
  a.addSeries({
    name: dadosGraficoPeso.legenda,
    type: "line",
    color: "#00ff00",
    marker:{
      radius: 8,
      x: -4,
      y: -4
    },
    data: [
      [parseFloat(parseFloat(dadosGraficoPeso.idade) - parseFloat(dadosGraficoPeso.idadeOffset)), dadosGraficoPeso.peso]
    ]
  }, true);
  a.xAxis[0].axisTitle.attr({
    text: ageLabel + " (" + dadosGraficoPeso.unidadeTempo + ")"
  });
if (dadosGraficoPeso.idade != null) {  
  let childPercent = getChildPercentPeso(dadosGraficoPeso);
  $('.' + childPercent).removeClass("d-none");
  $('#idChildPercent').val(childPercent);
}
}
function columnContainer(girlTillThirteen,girlTillFive,girlTillTen,heightPercentileLabel,dadosGraficoAltura,Constants,percentileLabel){
  if (dadosGraficoAltura.genero == Constants.CALCULATOR_GENERO_O){
    if (dadosGraficoAltura.days < 90){
      dadosGraficoAltura.tipo = childTillThirteen;
    }
    else if (dadosGraficoAltura.days > 90 && dadosGraficoAltura.days < 1825){
      dadosGraficoAltura.tipo = childTillFive;
    }
    else{
      dadosGraficoAltura.tipo = childTillTen;
    }
    dadosGraficoAltura.titulo = heightPercentileLabel + ' ' + dadosGraficoAltura.tipo;
  }
  else if (dadosGraficoAltura.genero == Constants.CALCULATOR_GENERO_A){
    if (dadosGraficoAltura.days < 90){
      dadosGraficoAltura.tipo = girlTillThirteen;
    }
    else if (dadosGraficoAltura.days >= 90 && dadosGraficoAltura.days < 1825){
      dadosGraficoAltura.tipo = girlTillFive;
    }
    else{
      dadosGraficoAltura.tipo = girlTillTen;
    }
    dadosGraficoAltura.titulo = heightPercentileLabel + ' ' + dadosGraficoAltura.tipo;
  }
  else{
    dadosGraficoAltura.titulo = percentileLabel;
  }
}
function graficoTipoSet(getChildPercentAltura,girlTillThirteen,girlTillFive,girlTillTen,dadosGraficoAltura,a,ageLabel){
  let setTipo = String(dadosGraficoAltura.tipo);
  if (setTipo == girlTillThirteen){
    a.xAxis[0].setCategories([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]);
    a.addSeries({
      name: "3%",
      data: alturagirluptothirteen3
    }, false);
    a.addSeries({
      name: "15%",
      data: alturagirluptothirteen15
    }, false);
    a.addSeries({
      name: "50%",
      data: alturagirluptothirteen50
    }, false);
    a.addSeries({
      name: "85%",
      data: alturagirluptothirteen85
    }, false);
    a.addSeries({
      name: "97%",
      data: alturagirluptothirteen97
    }, false);
  }
  if (setTipo == childTillThirteen){
    a.xAxis[0].setCategories([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]);
    a.addSeries({
      name: "3%",
      data: alturachilduptothirteen3
    }, false);
    a.addSeries({
      name: "15%",
      data: alturachilduptothirteen15
    }, false);
    a.addSeries({
      name: "50%",
      data: alturachilduptothirteen50
    }, false);
    a.addSeries({
      name: "85%",
      data: alturachilduptothirteen85
    }, false);
    a.addSeries({
      name: "97%",
      data: alturachilduptothirteen97
    }, false);
  }
  if (setTipo == girlTillFive){
    a.xAxis[0].setCategories([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]);
    a.addSeries({
      name: "3%",
      data: alturagirluptofive3
    }, false);
    a.addSeries({
      name: "15%",
      data: alturagirluptofive15
    }, false);
    a.addSeries({
      name: "50%",
      data: alturagirluptofive50
    }, false);
    a.addSeries({
      name: "85%",
      data: alturagirluptofive85
    }, false);
    a.addSeries({
      name: "97%",
      data: alturagirluptofive97
    }, false);
    a.xAxis[0].options.tickInterval = 6;
  }
  if (setTipo == girlTillTen){
    a.xAxis[0].setCategories([24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120]);
    a.addSeries({
      name: "3%",
      data: alturagirluptoten3
    }, false);
    a.addSeries({
      name: "15%",
      data: alturagirluptoten15
    }, false);
    a.addSeries({
      name: "50%",
      data: alturagirluptoten50
    }, false);
    a.addSeries({
      name: "85%",
      data: alturagirluptoten85
    }, false);
    a.addSeries({
      name: "97%",
      data: alturagirluptoten97
    }, false);
    a.xAxis[0].options.tickInterval = 6;
  }
  if (setTipo == childTillFive) {
    a.xAxis[0].setCategories([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]);
    a.addSeries({
      name: "3%",
      data: alturachilduptofive3
    }, false);
    a.addSeries({
      name: "15%",
      data: alturachilduptofive15
    }, false);
    a.addSeries({
      name: "50%",
      data: alturachilduptofive50
    }, false);
    a.addSeries({
      name: "85%",
      data: alturachilduptofive85
    }, false);
    a.addSeries({
      name: "97%",
      data: alturachilduptofive97
    }, false);
    a.xAxis[0].options.tickInterval = 6;
  }
  if (setTipo == childTillTen){
    a.xAxis[0].setCategories([24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120]);
    a.addSeries({
      name: "3%",
      data: alturachilduptoten3
    }, false);
    a.addSeries({
      name: "15%",
      data: alturachilduptoten15
    }, false);
    a.addSeries({
      name: "50%",
      data: alturachilduptoten50
    }, false);
    a.addSeries({
      name: "85%",
      data: alturachilduptoten85
    }, false);
    a.addSeries({
      name: "97%",
      data: alturachilduptoten97
    }, false);
    a.xAxis[0].options.tickInterval = 6;
  }
  a.setTitle({
    text: dadosGraficoAltura.titulo
  });
  a.addSeries({
    name: dadosGraficoAltura.legenda,
    type: "line",
    color: "#00ff00",
    marker:{
      radius: 8,
      x: -4,
      y: -4
    },
    data: [
      [parseFloat(parseFloat(dadosGraficoAltura.idade) - parseFloat(dadosGraficoAltura.idadeOffset)), dadosGraficoAltura.altura]
    ]
  }, true);
  a.xAxis[0].axisTitle.attr({
    text: ageLabel + " (" + dadosGraficoAltura.unidadeTempo + ")"
  });
if (dadosGraficoAltura.idade != null) {
  let childPercent = getChildPercentAltura(dadosGraficoAltura);
  $('.' + childPercent).removeClass("d-none");
  $('#idChildPercent').val(childPercent);
}
}
function dadosFormat(y,heightUnit,dadosGraficoPeso){
  if (this.series.name == dadosGraficoPeso.legenda){
    return "<b>" + this.series.name + "</b><br/>" + dadosGraficoPeso.idade + " " + dadosGraficoPeso.unidadeTempo + ": " + this.y + " " + heightUnit
  }
}
function curvedEdge(y,heightUnit){
  if (this.series.name == dadosGraficoAltura.legenda){
    return "<b>" + this.series.name + "</b><br/>" + dadosGraficoAltura.idade + " " + dadosGraficoAltura.unidadeTempo + ": " + this.y + " " + heightUnit
  }
}
function curvedDisplay(intsRegex,strAltura,floatsRegex,heightError){
  if ((!intsRegex.test(strAltura) && !floatsRegex.test(strAltura)) || strAltura < 30 || strAltura > 150){
    alert(heightError + '\n' + errorLabel);
    $(".a-container--highchart ~ .button").addClass('d-none');
    return false;
  }
}
function curvedHeight(height,weight){
  if(height && weight) {
    $('.formcontainer.o-form-container--base.o-form-container--calculator-v2 .btn').css('pointer-events','');
    } else {
        $('.formcontainer.o-form-container--base.o-form-container--calculator-v2 .btn').css('pointer-events','none');
    }
}
function curvedPedia(a){
  while (a.series.length > 0){
    a.series[0].remove(true);
  }
}
(function($) {
let daughterValue=$("input[name='yourdaughter']").val();
let sonValue=$("input[name='yourson']").val();
let monthsLabel=$("input[name='months']").val();
let weightError=$("input[name='weighterror']").val();
let genderError=$("input[name='gendererror']").val();
let dobError=$("input[name='doberror']").val();
let heightError=$("input[name='heighterror']").val();
let girlLabel=$("input[name='girllabel']").val();
let tillTen=$("input[name='uptoten']").val();
let weeksLabel=$("input[name='weeks']").val();
let heightLabel=$("input[name='heightlabel']").val();
let weightLabel=$("input[name='weightlabel']").val();
let heightUnit=$("input[name='heightunit']").val();
let ageLabel=$("input[name='agelabel']").val();
let percentileLabel=$("input[name='percentilelabel']").val();
let girlTillThirteen=$("input[name='girluptothirteen']").val();
let girlTillFive=$("input[name='girluptofive']").val();
let girlTillTen=$("input[name='girluptoten']").val();
let heightPercentileLabel=$("input[name='heightpercentilelabel']").val();
let menInLabel=$("input[name='meninlabel']").val();
let errorLabel =$("input[name='errorlabel']").val();
let gridColor = '#fff';

let Constants={
  CALCULATOR_SUBMIT_BTN: $(".a-container--pediasure-calculator .btn"),
  CLICK: "click",
  CALCULATOR_GERAR_PESO_CLASS: "gerar-peso",
  CALCULATOR_SEXO_CHECKED: 'input["name=sexo"]:checked',
  CALCULATOR_FEMALE: "f",
  CALCULATOR_GENERO_A: "a",
  CALCULATOR_GENERO_O: "o",
  CALCULATOR_DAUGHTER: daughterValue,
  CALCULATOR_SON: sonValue,
  CALCULATOR_YEAR_ID: $("input[type='date']").length > 0 ? $("input[type='date']").val().split('-')[0] : '',
  CALCULATOR_MONTH_ID: $("input[type='date']").length > 0 ? $("input[type='date']").val().split('-')[1] : '',
  CALCULATOR_DAY_ID: $("input[type='date']").length > 0 ? $("input[type='date']").val().split('-')[2]: '',
  CALCULATOR_PESO_ID: "#grafico-peso",
  CALCULATOR_P_MENOR_ID: "#calculator p.menor",
  CALCULATOR_PRINT_CLASS: ".print",
  CALCULATOR_GRAFICO_ID: "#grafico-altura",
  CALCULATOR_ALTURA_CLASS: ".select-altura"
};
let dadosGraficoPeso = {
  tipo: null,
  genero: null,
  legenda: null,
  peso: null,
  idade: null,
  idadeOffset: 0,
  unidadeTempo: monthsLabel
};

  let dadosGraficoAltura = {
  tipo: null,
  genero: null,
  legenda: null,
  altura: null,
  idade: null,
  idadeOffset: 0,
  unidadeTempo: monthsLabel,
  titulo: ""
};


/*Glucerna calculator */
$("input[name='heightField'], input[name='weightField']").on('keypress',function (e) {
  let height = $("input[name='heightField']").val();
  let weight = $("input[name='weightField']").val();
  curvedHeight(height,weight);
 
let charCode = (e.which) ? e.which : e.keyCode;
return !(charCode !== 46 && charCode > 31 && (charCode < 48 || charCode > 57));
});

calcGlucerna();
/*Glucerna calculator ends here*/

/*Pregnancy calculator starts here */
 Date.prototype.addDays = function(days) {
  let date = new Date(this.valueOf());
  date.setDate(date.getDate() + days);
  let dd = date.getDate();
  let mm = date.getMonth() + 1;
  let yyyy = date.getFullYear();
  let today = dd + '/' + mm + '/' + yyyy;
  return today;
}

childPregnancyedge();

calculatorStartsPreg();

  $(".o-form-option--base.o-form-option-radio--style1 input[name= 'sexo']").on('change',function() {
  $(".o-form-option--base.o-form-option-radio--style1 input[name= 'sexo']:checked").closest('.a-radio.a-radio--horizontal').css({backgroundColor: "#be9dc8"});
  $(".o-form-option--base.o-form-option-radio--style1 input[name= 'sexo']:not(:checked)").closest('.a-radio.a-radio--horizontal').css({backgroundColor: "#fff"});
  $(".o-form-option--base.o-form-option-radio--style1 input[name= 'sexo']:checked").prev().css({color : "#f5ecd9"});
  $(".o-form-option--base.o-form-option-radio--style1 input[name= 'sexo']:not(:checked)").prev().css({color : "#6f5987"});
});

$(".o-form-option--base.o-form-option-radio--style2 input[name= 'sexo']").on('change',function() {
  $(".o-form-option--base.o-form-option-radio--style2 input[name= 'sexo']:checked").closest('.a-radio.a-radio--horizontal').css({backgroundImage: "linear-gradient(to right, #21C6FF, #5FF2DC)"});
  $(".o-form-option--base.o-form-option-radio--style2 input[name= 'sexo']:not(:checked)").closest('.a-radio.a-radio--horizontal').css({backgroundColor: "#fff", backgroundImage:"unset"});
  $(".o-form-option--base.o-form-option-radio--style2 input[name= 'sexo']:checked").prev().css({color : "#fff"});
  $(".o-form-option--base.o-form-option-radio--style2 input[name= 'sexo']:not(:checked)").prev().css({color : "#21C6FF"});
});

  $('.options.o-form-option--base.o-form-option-radio--style1').each(function(element){
      let my_class_css = {
          backgroundColor: "#be9dc8",
          margin: "0 -8px 0 0",
          maxWidth: "150px",
          width: "50%",
          display: "inline-block",
          textAlign: "center",
          cursor: "pointer",
          borderTopLeftRadius: "15px",
          borderBottomLeftRadius: "15px",
          paddingLeft: "unset",
          paddingRight: "unset"
      }
      let my_class_css_one = {
          backgroundColor: "#fff",
          margin: "0 -8px 0 0",
          maxWidth: "150px",
          width: "50%",
          display: "inline-block",
          textAlign: "center",
          cursor: "pointer",
          borderTopRightRadius: "15px",
          borderBottomRightRadius: "15px",
          paddingLeft: "unset",
          paddingRight: "unset"
      }
      
      $(this).find('.a-radio.a-radio--horizontal .a-radio__custom').addClass('d-none');
      $($(this).find('.a-radio.a-radio--horizontal')[0]).css(my_class_css);      
      $($(this).find('.a-radio.a-radio--horizontal')[1]).css(my_class_css_one);
      $(this).find('.a-radio.a-radio--horizontal>.a-radio__label').css({width: "150px"});
      $($(this).find('.a-radio.a-radio--horizontal')[0]).find('.a-radio__text').css({color: "#f5ecd9"});
      $($(this).find('.a-radio.a-radio--horizontal')[1]).find('.a-radio__text').css({color: "#6f5987"});
  });
  $('.options.o-form-option--base.o-form-option-radio--style2').each(function(element){
    let my_class_css = {
        backgroundColor: "#FFFFFF",
        margin: "0 -8px 0 0",
        maxWidth: "150px",
        width: "50%",
        display: "inline-block",
        textAlign: "center",
        cursor: "pointer",
        borderTopRightRadius: "15px",
        borderBottomRightRadius: "15px",
        paddingLeft: "unset",
        paddingRight: "unset"
    }
    let my_class_css_one = {
        backgroundImage: "linear-gradient(to right, #21C6FF, #5FF2DC)",
        margin: "0 -8px 0 0",
        maxWidth: "150px",
        width: "50%",
        display: "inline-block",
        textAlign: "center",
        cursor: "pointer",
        borderTopLeftRadius: "15px",
        borderBottomLeftRadius: "15px",
        paddingLeft: "unset",
        paddingRight: "unset"
    }
    
    $(this).find('.a-radio.a-radio--horizontal .a-radio__custom').addClass('d-none');
    $($(this).find('.a-radio.a-radio--horizontal')[1]).css(my_class_css);      
    $($(this).find('.a-radio.a-radio--horizontal')[0]).css(my_class_css_one);
    $(this).find('.a-radio.a-radio--horizontal>.a-radio__label').css({width: "150px"});
    $($(this).find('.a-radio.a-radio--horizontal')[1]).find('.a-radio__text').css({color: "#21C6FF"});
    $($(this).find('.a-radio.a-radio--horizontal')[0]).find('.a-radio__text').css({color: "#FFFFFF"});
});
$(".a-container--highchart ~ .button").addClass('d-none');

  let initCurvaPeso = function() {
  $(".a-column-control--form-calculator-pediasure .row > .col-12:nth-of-type(2) > .a-container--highchart").highcharts({
    chart:{
      type: 'spline',
      width: 508,
      height: 400,
      backgroundColor: '#6F5787',
      color: gridColor
    },
    legend: {
      layout: 'horizontal',
      align: 'center',
      verticalAlign: 'bottom',
      y: 0,
      itemDistance: 10,
      itemStyle: {
        fontSize: '14px',
        fontFamily: 'baseFontLighter'
      }
    },
    title:{
      text: "Curva de Crecimiento",
      x: -20,
      style: {
        color: gridColor,
        fontSize: '14px',
        fontFamily: 'baseFontLighter'
      }
    },
    subtitle:{
      text: "",
      x: -20,
      style: {
        color: gridColor
      }
    },
    xAxis:{
      title:{
        enabled: true,
        text: "x",
        style: {
            color: gridColor
        }
      },
      tickColor: gridColor,
      tickLength: 10,
      tickmarkPlacement: "on",
      tickPosition: "inside",
      tickPixelInterval: 100,
      tickWidth: 3,
      labels: {
        style: {
          color: gridColor
        }
      },
    },
    yAxis:{
      title:{
        text: weightLabel,
        style: {
          color: gridColor
        }
      },
      plotLines: [{
        value: 0,
        width: 1,
        color: "#808080"
      }],
      labels: {
        style: {
          color: gridColor
        }
      },
    },
    tooltip:{
      formatter: function(){
        dadosFormat(y,heightUnit,dadosGraficoPeso);
       
        return "<b> " + percentileLabel + " " + this.series.name + "</b><br/>" + this.x + " " + dadosGraficoPeso.unidadeTempo + ": " + this.y + " " + heightUnit
      }
    },
    plotOptions:{
      spline:{
        lineWidth: 2,
        states:{
          hover:{
            lineWidth: 3
          }
        },
        marker:{
          enabled: false
        }
      }
    },
    credits:{
      href: "",
      text: ""
    }
  });
  let a = $(".a-column-control--form-calculator-pediasure .row > .col-12:nth-of-type(2) > .a-container--highchart").highcharts();
curvedPedia(a);
  controlCalc(girlTillThirteen,girlTillFive,girlTillTen,Constants,dadosGraficoPeso);
 formcalculaterPedia(ageLabel,girlTillThirteen,girlTillFive,girlTillTen,getChildPercentPeso,dadosGraficoPeso,a);
}

  let initCurvaAltura = function() {
  $(".a-column-control--form-calculator-pediasure .row > .col-12:nth-of-type(2) > .a-container--highchart").highcharts({
    chart:{
      type: 'spline',
      width: 508,
      height: 400,
      backgroundColor: '#6F5787',
      color: gridColor
    },
    legend: {
      layout: 'horizontal',
      align: 'center',
      verticalAlign: 'bottom',
      y: 0,
      itemDistance: 10,
      itemStyle: {
        fontSize: '14px',
        fontFamily: 'baseFontLighter'
      }
    },
    title:{
      text: "Curva de Crecimiento",
      x: -20,
      style: {
        color: gridColor,
        fontSize: '14px',
        fontFamily: 'baseFontLighter'
      }
    },
    subtitle:{
      text: "",
      x: -20,
      color: gridColor
    },
    xAxis:{
      title:{
        enabled: true,
        text: "x",
        style: {
          color: gridColor
        }
      },
      tickColor: gridColor,
      tickLength: 10,
      tickmarkPlacement: "on",
      tickPosition: "inside",
      tickPixelInterval: 100,
      tickWidth: 3,
      labels: {
        style: {
          color: gridColor
        }
      },
    },
    yAxis:{
      title:{
        text: heightLabel,
        style: {
          color: gridColor
        }
      },
      plotLines: [
      {
        value: 0,
        width: 1,
        color: "#808080"
      }],
      labels: {
        style: {
          color: gridColor
        }
      },
    },
    tooltip:{
      formatter: function(){
        curvedEdge(y,heightUnit);
       
        return "<b> " + percentileLabel + " " + this.series.name + "</b><br/>" + this.x + " " + dadosGraficoAltura.unidadeTempo + ": " + this.y + " " + heightUnit
      }
    },
    plotOptions:{
      spline:{
        lineWidth: 2,
        states:{
          hover:{
            lineWidth: 3
          }
        },
        marker:{
          enabled: false
        }
      }
    },
    credits:{
      href: "",
      text: ""
    }
  });
  let a = $(".a-column-control--form-calculator-pediasure .row > .col-12:nth-of-type(2) > .a-container--highchart").highcharts();
  while (a.series.length > 0){
    a.series[0].remove(true)
  }
  columnContainer(girlTillThirteen,girlTillFive,girlTillTen,heightPercentileLabel,dadosGraficoAltura,Constants,percentileLabel);

 graficoTipoSet(getChildPercentAltura,girlTillThirteen,girlTillFive,girlTillTen,dadosGraficoAltura,a,ageLabel);
}

let getChildPercentAltura = function(y) {


childroundEdge(y);

 return result;
}
let getChildPercentPeso = function(y) {



highcartEdge(y);

 return result;
}

$(".a-container--highchart ~ .button").on('click',function(event) {
   event.preventDefault();
   $('.highcharts-button').trigger('click');
});

$(".a-column-control--form-calculator-pediasure .col-12.col-md-6.col-lg-6:nth-of-type(1) .button").click(function(event) {
 event.preventDefault();
 $(".a-container--highchart ~ .button").removeClass('d-none');
    let CALCULATOR_YEAR_ID = $("input[type='date']").val().split('-')[0],
    CALCULATOR_MONTH_ID = $("input[type='date']").val().split('-')[1],
    CALCULATOR_DAY_ID =  $("input[type='date']").val().split('-')[2];
 initCurvaAltura();
 if ($("input[name= 'tipo']:checked").val() === 'peso') {
   pesoCalculator(Constants,dadosGraficoPeso);
    
   
   let dateToday = new Date();
   let dateNasc = new Date(CALCULATOR_YEAR_ID, CALCULATOR_MONTH_ID - 1, CALCULATOR_DAY_ID);
   caluculatorDay(dobError,dateToday,dateNasc,CALCULATOR_DAY_ID,CALCULATOR_MONTH_ID,CALCULATOR_YEAR_ID);
   
   let intRegex = /^\d+$/;
   let floatRegex = /^\d+(\.\d+)?$/;
   let strPeso = $('.a-dropdown__field li.selected')[0].dataset.optionvalue;
   strPeso.replace(/,/g, ".");
   weighterrorLabel(weightError,intRegex,floatRegex,strPeso,errorLabel);
   
   dadosGraficoPeso.peso = parseFloat(strPeso);
   let hoje = new Date();
   hoje.setHours(0, 0, 0, 0);
   let days = Math.round((hoje - dateNasc) / 1000 / 60 / 60 / 24);
   dadosGraficoPeso.days = days;
   daysNinty(girlLabel,tillTen,weeksLabel,menInLabel,monthsLabel,days,dadosGraficoPeso);
   
   $(Constants.CALCULATOR_PESO_ID).show();
   $(Constants.CALCULATOR_P_MENOR_ID).show();
   $(Constants.CALCULATOR_PRINT_CLASS).show();
   initCurvaPeso();
 }
 else{
   gendererrorLabel(genderError,errorLabel,dadosGraficoAltura,Constants);
   
   let datesToday = new Date();
   let datesNasc = new Date(CALCULATOR_YEAR_ID, CALCULATOR_MONTH_ID - 1, CALCULATOR_DAY_ID);
   getdateCalculator(dobError,errorLabel,datesToday,datesNasc,CALCULATOR_DAY_ID,CALCULATOR_MONTH_ID,CALCULATOR_YEAR_ID);
   
   let intsRegex = /^\d+$/;
   let floatsRegex = /^\d+(\.\d+)?$/;
   let strAltura = $('.o-form-option-dropdown--style1').length > 0 ? $($('.o-form-option-dropdown--style1')[1]).find('.a-dropdown__field li.selected')[0].dataset.optionvalue : $($('.o-form-option-dropdown--style2')[1]).find('.a-dropdown__field li.selected')[0].dataset.optionvalue;
   strAltura.replace(/,/g, ".");
   curvedDisplay(intsRegex,strAltura,floatsRegex,heightError);
   
   dadosGraficoAltura.altura = parseFloat(strAltura);
   let hojes = new Date();
   hojes.setHours(0, 0, 0, 0);
   let daysHere = Math.round((hojes - datesNasc) / 1000 / 60 / 60 / 24);
   dadosGraficoAltura.days = daysHere;
   dayhereNinty(girlLabel,tillTen,weeksLabel,monthsLabel,dadosGraficoAltura,days);
   
   initCurvaAltura();
 }
});  
})($);